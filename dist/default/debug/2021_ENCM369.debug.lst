

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Apr 10 10:21:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F27Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK6,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=4,class=CODE,delta=1
    33                           	psect	text19,global,reloc=4,class=CODE,delta=1
    34                           	psect	text20,global,reloc=4,class=CODE,delta=1
    35                           	psect	text21,global,reloc=4,class=CODE,delta=1
    36                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41  0000                     
    42                           ; Version 2.32
    43                           ; Generated 19/11/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F27Q43 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  0106CA                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _G_au8SDResp40
    83  0106CA  FF                 	db	255
    84  0106CB  FF                 	db	255
    85  0106CC  FF                 	db	255
    86  0106CD  FF                 	db	255
    87  0106CE  FF                 	db	255
    88                           
    89                           ;initializer for _G_u8SDResp8
    90  0106CF  FF                 	db	255
    91                           
    92                           	psect	idataBANK6
    93  01011A                     __pidataBANK6:
    94                           	callstack 0
    95                           
    96                           ;initializer for _G_au8UserAppsinTable
    97  01011A  80                 	db	128
    98  01011B  83                 	db	131
    99  01011C  86                 	db	134
   100  01011D  89                 	db	137
   101  01011E  8C                 	db	140
   102  01011F  8F                 	db	143
   103  010120  92                 	db	146
   104  010121  95                 	db	149
   105  010122  98                 	db	152
   106  010123  9B                 	db	155
   107  010124  9E                 	db	158
   108  010125  A2                 	db	162
   109  010126  A5                 	db	165
   110  010127  A7                 	db	167
   111  010128  AA                 	db	170
   112  010129  AD                 	db	173
   113  01012A  B0                 	db	176
   114  01012B  B3                 	db	179
   115  01012C  B6                 	db	182
   116  01012D  B9                 	db	185
   117  01012E  BC                 	db	188
   118  01012F  BE                 	db	190
   119  010130  C1                 	db	193
   120  010131  C4                 	db	196
   121  010132  C6                 	db	198
   122  010133  C9                 	db	201
   123  010134  CB                 	db	203
   124  010135  CE                 	db	206
   125  010136  D0                 	db	208
   126  010137  D3                 	db	211
   127  010138  D5                 	db	213
   128  010139  D7                 	db	215
   129  01013A  DA                 	db	218
   130  01013B  DC                 	db	220
   131  01013C  DE                 	db	222
   132  01013D  E0                 	db	224
   133  01013E  E2                 	db	226
   134  01013F  E4                 	db	228
   135  010140  E6                 	db	230
   136  010141  E8                 	db	232
   137  010142  EA                 	db	234
   138  010143  EB                 	db	235
   139  010144  ED                 	db	237
   140  010145  EE                 	db	238
   141  010146  F0                 	db	240
   142  010147  F1                 	db	241
   143  010148  F3                 	db	243
   144  010149  F4                 	db	244
   145  01014A  F5                 	db	245
   146  01014B  F6                 	db	246
   147  01014C  F8                 	db	248
   148  01014D  F9                 	db	249
   149  01014E  FA                 	db	250
   150  01014F  FA                 	db	250
   151  010150  FB                 	db	251
   152  010151  FC                 	db	252
   153  010152  FD                 	db	253
   154  010153  FD                 	db	253
   155  010154  FE                 	db	254
   156  010155  FE                 	db	254
   157  010156  FE                 	db	254
   158  010157  FF                 	db	255
   159  010158  FF                 	db	255
   160  010159  FF                 	db	255
   161  01015A  FF                 	db	255
   162  01015B  FF                 	db	255
   163  01015C  FF                 	db	255
   164  01015D  FF                 	db	255
   165  01015E  FE                 	db	254
   166  01015F  FE                 	db	254
   167  010160  FE                 	db	254
   168  010161  FD                 	db	253
   169  010162  FD                 	db	253
   170  010163  FC                 	db	252
   171  010164  FB                 	db	251
   172  010165  FA                 	db	250
   173  010166  FA                 	db	250
   174  010167  F9                 	db	249
   175  010168  F8                 	db	248
   176  010169  F6                 	db	246
   177  01016A  F5                 	db	245
   178  01016B  F4                 	db	244
   179  01016C  F3                 	db	243
   180  01016D  F1                 	db	241
   181  01016E  F0                 	db	240
   182  01016F  EE                 	db	238
   183  010170  ED                 	db	237
   184  010171  EB                 	db	235
   185  010172  EA                 	db	234
   186  010173  E8                 	db	232
   187  010174  E6                 	db	230
   188  010175  E4                 	db	228
   189  010176  E2                 	db	226
   190  010177  E0                 	db	224
   191  010178  DE                 	db	222
   192  010179  DC                 	db	220
   193  01017A  DA                 	db	218
   194  01017B  D7                 	db	215
   195  01017C  D5                 	db	213
   196  01017D  D3                 	db	211
   197  01017E  D0                 	db	208
   198  01017F  CE                 	db	206
   199  010180  CB                 	db	203
   200  010181  C9                 	db	201
   201  010182  C6                 	db	198
   202  010183  C4                 	db	196
   203  010184  C1                 	db	193
   204  010185  BE                 	db	190
   205  010186  BC                 	db	188
   206  010187  B9                 	db	185
   207  010188  B6                 	db	182
   208  010189  B3                 	db	179
   209  01018A  B0                 	db	176
   210  01018B  AD                 	db	173
   211  01018C  AA                 	db	170
   212  01018D  A7                 	db	167
   213  01018E  A5                 	db	165
   214  01018F  A2                 	db	162
   215  010190  9E                 	db	158
   216  010191  9B                 	db	155
   217  010192  98                 	db	152
   218  010193  95                 	db	149
   219  010194  92                 	db	146
   220  010195  8F                 	db	143
   221  010196  8C                 	db	140
   222  010197  89                 	db	137
   223  010198  86                 	db	134
   224  010199  83                 	db	131
   225  01019A  80                 	db	128
   226  01019B  7C                 	db	124
   227  01019C  79                 	db	121
   228  01019D  76                 	db	118
   229  01019E  73                 	db	115
   230  01019F  70                 	db	112
   231  0101A0  6D                 	db	109
   232  0101A1  6A                 	db	106
   233  0101A2  67                 	db	103
   234  0101A3  64                 	db	100
   235  0101A4  61                 	db	97
   236  0101A5  5D                 	db	93
   237  0101A6  5A                 	db	90
   238  0101A7  58                 	db	88
   239  0101A8  55                 	db	85
   240  0101A9  52                 	db	82
   241  0101AA  4F                 	db	79
   242  0101AB  4C                 	db	76
   243  0101AC  49                 	db	73
   244  0101AD  46                 	db	70
   245  0101AE  43                 	db	67
   246  0101AF  41                 	db	65
   247  0101B0  3E                 	db	62
   248  0101B1  3B                 	db	59
   249  0101B2  39                 	db	57
   250  0101B3  36                 	db	54
   251  0101B4  34                 	db	52
   252  0101B5  31                 	db	49
   253  0101B6  2F                 	db	47
   254  0101B7  2C                 	db	44
   255  0101B8  2A                 	db	42
   256  0101B9  28                 	db	40
   257  0101BA  25                 	db	37
   258  0101BB  23                 	db	35
   259  0101BC  21                 	db	33
   260  0101BD  1F                 	db	31
   261  0101BE  1D                 	db	29
   262  0101BF  1B                 	db	27
   263  0101C0  19                 	db	25
   264  0101C1  17                 	db	23
   265  0101C2  15                 	db	21
   266  0101C3  14                 	db	20
   267  0101C4  12                 	db	18
   268  0101C5  11                 	db	17
   269  0101C6  0F                 	db	15
   270  0101C7  0E                 	db	14
   271  0101C8  0C                 	db	12
   272  0101C9  0B                 	db	11
   273  0101CA  0A                 	db	10
   274  0101CB  09                 	db	9
   275  0101CC  07                 	db	7
   276  0101CD  06                 	db	6
   277  0101CE  05                 	db	5
   278  0101CF  05                 	db	5
   279  0101D0  04                 	db	4
   280  0101D1  03                 	db	3
   281  0101D2  02                 	db	2
   282  0101D3  02                 	db	2
   283  0101D4  01                 	db	1
   284  0101D5  01                 	db	1
   285  0101D6  01                 	db	1
   286  0101D7  00                 	db	0
   287  0101D8  00                 	db	0
   288  0101D9  00                 	db	0
   289  0101DA  00                 	db	0
   290  0101DB  00                 	db	0
   291  0101DC  00                 	db	0
   292  0101DD  00                 	db	0
   293  0101DE  01                 	db	1
   294  0101DF  01                 	db	1
   295  0101E0  01                 	db	1
   296  0101E1  02                 	db	2
   297  0101E2  02                 	db	2
   298  0101E3  03                 	db	3
   299  0101E4  04                 	db	4
   300  0101E5  05                 	db	5
   301  0101E6  05                 	db	5
   302  0101E7  06                 	db	6
   303  0101E8  07                 	db	7
   304  0101E9  09                 	db	9
   305  0101EA  0A                 	db	10
   306  0101EB  0B                 	db	11
   307  0101EC  0C                 	db	12
   308  0101ED  0E                 	db	14
   309  0101EE  0F                 	db	15
   310  0101EF  11                 	db	17
   311  0101F0  12                 	db	18
   312  0101F1  14                 	db	20
   313  0101F2  15                 	db	21
   314  0101F3  17                 	db	23
   315  0101F4  19                 	db	25
   316  0101F5  1B                 	db	27
   317  0101F6  1D                 	db	29
   318  0101F7  1F                 	db	31
   319  0101F8  21                 	db	33
   320  0101F9  23                 	db	35
   321  0101FA  25                 	db	37
   322  0101FB  28                 	db	40
   323  0101FC  2A                 	db	42
   324  0101FD  2C                 	db	44
   325  0101FE  2F                 	db	47
   326  0101FF  31                 	db	49
   327  010200  34                 	db	52
   328  010201  36                 	db	54
   329  010202  39                 	db	57
   330  010203  3B                 	db	59
   331  010204  3E                 	db	62
   332  010205  41                 	db	65
   333  010206  43                 	db	67
   334  010207  46                 	db	70
   335  010208  49                 	db	73
   336  010209  4C                 	db	76
   337  01020A  4F                 	db	79
   338  01020B  52                 	db	82
   339  01020C  55                 	db	85
   340  01020D  58                 	db	88
   341  01020E  5A                 	db	90
   342  01020F  5D                 	db	93
   343  010210  61                 	db	97
   344  010211  64                 	db	100
   345  010212  67                 	db	103
   346  010213  6A                 	db	106
   347  010214  6D                 	db	109
   348  010215  70                 	db	112
   349  010216  73                 	db	115
   350  010217  76                 	db	118
   351  010218  79                 	db	121
   352  010219  7C                 	db	124
   353                           
   354                           	psect	mediumconst
   355  00FEFE                     __pmediumconst:
   356                           	callstack 0
   357  00FEFE  00                 	db	0
   358  00FEFF                     _CRCTable:
   359                           	callstack 0
   360  00FEFF  00                 	db	0
   361  00FF00  09                 	db	9
   362  00FF01  12                 	db	18
   363  00FF02  1B                 	db	27
   364  00FF03  24                 	db	36
   365  00FF04  2D                 	db	45
   366  00FF05  36                 	db	54
   367  00FF06  3F                 	db	63
   368  00FF07  48                 	db	72
   369  00FF08  41                 	db	65
   370  00FF09  5A                 	db	90
   371  00FF0A  53                 	db	83
   372  00FF0B  6C                 	db	108
   373  00FF0C  65                 	db	101
   374  00FF0D  7E                 	db	126
   375  00FF0E  77                 	db	119
   376  00FF0F  19                 	db	25
   377  00FF10  10                 	db	16
   378  00FF11  0B                 	db	11
   379  00FF12  02                 	db	2
   380  00FF13  3D                 	db	61
   381  00FF14  34                 	db	52
   382  00FF15  2F                 	db	47
   383  00FF16  26                 	db	38
   384  00FF17  51                 	db	81
   385  00FF18  58                 	db	88
   386  00FF19  43                 	db	67
   387  00FF1A  4A                 	db	74
   388  00FF1B  75                 	db	117
   389  00FF1C  7C                 	db	124
   390  00FF1D  67                 	db	103
   391  00FF1E  6E                 	db	110
   392  00FF1F  32                 	db	50
   393  00FF20  3B                 	db	59
   394  00FF21  20                 	db	32
   395  00FF22  29                 	db	41
   396  00FF23  16                 	db	22
   397  00FF24  1F                 	db	31
   398  00FF25  04                 	db	4
   399  00FF26  0D                 	db	13
   400  00FF27  7A                 	db	122
   401  00FF28  73                 	db	115
   402  00FF29  68                 	db	104
   403  00FF2A  61                 	db	97
   404  00FF2B  5E                 	db	94
   405  00FF2C  57                 	db	87
   406  00FF2D  4C                 	db	76
   407  00FF2E  45                 	db	69
   408  00FF2F  2B                 	db	43
   409  00FF30  22                 	db	34
   410  00FF31  39                 	db	57
   411  00FF32  30                 	db	48
   412  00FF33  0F                 	db	15
   413  00FF34  06                 	db	6
   414  00FF35  1D                 	db	29
   415  00FF36  14                 	db	20
   416  00FF37  63                 	db	99
   417  00FF38  6A                 	db	106
   418  00FF39  71                 	db	113
   419  00FF3A  78                 	db	120
   420  00FF3B  47                 	db	71
   421  00FF3C  4E                 	db	78
   422  00FF3D  55                 	db	85
   423  00FF3E  5C                 	db	92
   424  00FF3F  64                 	db	100
   425  00FF40  6D                 	db	109
   426  00FF41  76                 	db	118
   427  00FF42  7F                 	db	127
   428  00FF43  40                 	db	64
   429  00FF44  49                 	db	73
   430  00FF45  52                 	db	82
   431  00FF46  5B                 	db	91
   432  00FF47  2C                 	db	44
   433  00FF48  25                 	db	37
   434  00FF49  3E                 	db	62
   435  00FF4A  37                 	db	55
   436  00FF4B  08                 	db	8
   437  00FF4C  01                 	db	1
   438  00FF4D  1A                 	db	26
   439  00FF4E  13                 	db	19
   440  00FF4F  7D                 	db	125
   441  00FF50  74                 	db	116
   442  00FF51  6F                 	db	111
   443  00FF52  66                 	db	102
   444  00FF53  59                 	db	89
   445  00FF54  50                 	db	80
   446  00FF55  4B                 	db	75
   447  00FF56  42                 	db	66
   448  00FF57  35                 	db	53
   449  00FF58  3C                 	db	60
   450  00FF59  27                 	db	39
   451  00FF5A  2E                 	db	46
   452  00FF5B  11                 	db	17
   453  00FF5C  18                 	db	24
   454  00FF5D  03                 	db	3
   455  00FF5E  0A                 	db	10
   456  00FF5F  56                 	db	86
   457  00FF60  5F                 	db	95
   458  00FF61  44                 	db	68
   459  00FF62  4D                 	db	77
   460  00FF63  72                 	db	114
   461  00FF64  7B                 	db	123
   462  00FF65  60                 	db	96
   463  00FF66  69                 	db	105
   464  00FF67  1E                 	db	30
   465  00FF68  17                 	db	23
   466  00FF69  0C                 	db	12
   467  00FF6A  05                 	db	5
   468  00FF6B  3A                 	db	58
   469  00FF6C  33                 	db	51
   470  00FF6D  28                 	db	40
   471  00FF6E  21                 	db	33
   472  00FF6F  4F                 	db	79
   473  00FF70  46                 	db	70
   474  00FF71  5D                 	db	93
   475  00FF72  54                 	db	84
   476  00FF73  6B                 	db	107
   477  00FF74  62                 	db	98
   478  00FF75  79                 	db	121
   479  00FF76  70                 	db	112
   480  00FF77  07                 	db	7
   481  00FF78  0E                 	db	14
   482  00FF79  15                 	db	21
   483  00FF7A  1C                 	db	28
   484  00FF7B  23                 	db	35
   485  00FF7C  2A                 	db	42
   486  00FF7D  31                 	db	49
   487  00FF7E  38                 	db	56
   488  00FF7F  41                 	db	65
   489  00FF80  48                 	db	72
   490  00FF81  53                 	db	83
   491  00FF82  5A                 	db	90
   492  00FF83  65                 	db	101
   493  00FF84  6C                 	db	108
   494  00FF85  77                 	db	119
   495  00FF86  7E                 	db	126
   496  00FF87  09                 	db	9
   497  00FF88  00                 	db	0
   498  00FF89  1B                 	db	27
   499  00FF8A  12                 	db	18
   500  00FF8B  2D                 	db	45
   501  00FF8C  24                 	db	36
   502  00FF8D  3F                 	db	63
   503  00FF8E  36                 	db	54
   504  00FF8F  58                 	db	88
   505  00FF90  51                 	db	81
   506  00FF91  4A                 	db	74
   507  00FF92  43                 	db	67
   508  00FF93  7C                 	db	124
   509  00FF94  75                 	db	117
   510  00FF95  6E                 	db	110
   511  00FF96  67                 	db	103
   512  00FF97  10                 	db	16
   513  00FF98  19                 	db	25
   514  00FF99  02                 	db	2
   515  00FF9A  0B                 	db	11
   516  00FF9B  34                 	db	52
   517  00FF9C  3D                 	db	61
   518  00FF9D  26                 	db	38
   519  00FF9E  2F                 	db	47
   520  00FF9F  73                 	db	115
   521  00FFA0  7A                 	db	122
   522  00FFA1  61                 	db	97
   523  00FFA2  68                 	db	104
   524  00FFA3  57                 	db	87
   525  00FFA4  5E                 	db	94
   526  00FFA5  45                 	db	69
   527  00FFA6  4C                 	db	76
   528  00FFA7  3B                 	db	59
   529  00FFA8  32                 	db	50
   530  00FFA9  29                 	db	41
   531  00FFAA  20                 	db	32
   532  00FFAB  1F                 	db	31
   533  00FFAC  16                 	db	22
   534  00FFAD  0D                 	db	13
   535  00FFAE  04                 	db	4
   536  00FFAF  6A                 	db	106
   537  00FFB0  63                 	db	99
   538  00FFB1  78                 	db	120
   539  00FFB2  71                 	db	113
   540  00FFB3  4E                 	db	78
   541  00FFB4  47                 	db	71
   542  00FFB5  5C                 	db	92
   543  00FFB6  55                 	db	85
   544  00FFB7  22                 	db	34
   545  00FFB8  2B                 	db	43
   546  00FFB9  30                 	db	48
   547  00FFBA  39                 	db	57
   548  00FFBB  06                 	db	6
   549  00FFBC  0F                 	db	15
   550  00FFBD  14                 	db	20
   551  00FFBE  1D                 	db	29
   552  00FFBF  25                 	db	37
   553  00FFC0  2C                 	db	44
   554  00FFC1  37                 	db	55
   555  00FFC2  3E                 	db	62
   556  00FFC3  01                 	db	1
   557  00FFC4  08                 	db	8
   558  00FFC5  13                 	db	19
   559  00FFC6  1A                 	db	26
   560  00FFC7  6D                 	db	109
   561  00FFC8  64                 	db	100
   562  00FFC9  7F                 	db	127
   563  00FFCA  76                 	db	118
   564  00FFCB  49                 	db	73
   565  00FFCC  40                 	db	64
   566  00FFCD  5B                 	db	91
   567  00FFCE  52                 	db	82
   568  00FFCF  3C                 	db	60
   569  00FFD0  35                 	db	53
   570  00FFD1  2E                 	db	46
   571  00FFD2  27                 	db	39
   572  00FFD3  18                 	db	24
   573  00FFD4  11                 	db	17
   574  00FFD5  0A                 	db	10
   575  00FFD6  03                 	db	3
   576  00FFD7  74                 	db	116
   577  00FFD8  7D                 	db	125
   578  00FFD9  66                 	db	102
   579  00FFDA  6F                 	db	111
   580  00FFDB  50                 	db	80
   581  00FFDC  59                 	db	89
   582  00FFDD  42                 	db	66
   583  00FFDE  4B                 	db	75
   584  00FFDF  17                 	db	23
   585  00FFE0  1E                 	db	30
   586  00FFE1  05                 	db	5
   587  00FFE2  0C                 	db	12
   588  00FFE3  33                 	db	51
   589  00FFE4  3A                 	db	58
   590  00FFE5  21                 	db	33
   591  00FFE6  28                 	db	40
   592  00FFE7  5F                 	db	95
   593  00FFE8  56                 	db	86
   594  00FFE9  4D                 	db	77
   595  00FFEA  44                 	db	68
   596  00FFEB  7B                 	db	123
   597  00FFEC  72                 	db	114
   598  00FFED  69                 	db	105
   599  00FFEE  60                 	db	96
   600  00FFEF  0E                 	db	14
   601  00FFF0  07                 	db	7
   602  00FFF1  1C                 	db	28
   603  00FFF2  15                 	db	21
   604  00FFF3  2A                 	db	42
   605  00FFF4  23                 	db	35
   606  00FFF5  38                 	db	56
   607  00FFF6  31                 	db	49
   608  00FFF7  46                 	db	70
   609  00FFF8  4F                 	db	79
   610  00FFF9  54                 	db	84
   611  00FFFA  5D                 	db	93
   612  00FFFB  62                 	db	98
   613  00FFFC  6B                 	db	107
   614  00FFFD  70                 	db	112
   615  00FFFE  79                 	db	121
   616  00FFFF                     __end_of_CRCTable:
   617                           	callstack 0
   618  0000                     _SPI1RXB	set	128
   619  0000                     _SPI1CON2bits	set	134
   620  0000                     _SPI1TXB	set	129
   621  0000                     _SPI1BAUD	set	137
   622  0000                     _SPI1CLK	set	140
   623  0000                     _SPI1CON2	set	134
   624  0000                     _SPI1CON1	set	133
   625  0000                     _SPI1CON0	set	132
   626  0000                     _SPI1CON0bits	set	132
   627  0000                     _DAC1DATL	set	125
   628  0000                     _DAC1CON	set	127
   629  0000                     _SPI1SDIPPS	set	619
   630  0000                     _SPI1SCKPPS	set	618
   631  0000                     _RC4PPS	set	533
   632  0000                     _RC2PPS	set	531
   633  0000                     _T1CON	set	798
   634  0000                     _T1CLK	set	801
   635  0000                     _T1GCON	set	799
   636  0000                     _T0CON1	set	795
   637  0000                     _T0CON0	set	794
   638  0000                     _TMR1L	set	796
   639  0000                     _TMR1H	set	797
   640  0000                     _T1CONbits	set	798
   641  0000                     _TMR0L	set	792
   642  0000                     _TMR0H	set	793
   643  0000                     _T0CON0bits	set	794
   644  0000                     _T2CON	set	804
   645  0000                     _T2CLKCON	set	806
   646  0000                     _T2PR	set	803
   647  0000                     _ANSELC	set	1040
   648  0000                     _ANSELA	set	1024
   649  0000                     _LATCbits	set	1216
   650  0000                     _PIR0bits	set	1198
   651  0000                     _INTCON0bits	set	1238
   652  0000                     _LATA	set	1214
   653  0000                     _PIE3bits	set	1185
   654  0000                     _PIR3bits	set	1201
   655  0000                     _LATC	set	1216
   656  0000                     _TRISC	set	1224
   657  0000                     _TRISA	set	1222
   658  00FFFF  00                 	db	0	; dummy byte at the end
   659  0000                     
   660                           ; #config settings
   661                           
   662                           	psect	cinit
   663  0103D0                     __pcinit:
   664                           	callstack 0
   665  0103D0                     start_initialization:
   666                           	callstack 0
   667  0103D0                     __initialization:
   668                           	callstack 0
   669                           
   670                           ; Initialize objects allocated to BANK6 (256 bytes)
   671                           ; load TBLPTR registers with __pidataBANK6
   672  0103D0  0E1A               	movlw	low __pidataBANK6
   673  0103D2  6EF6               	movwf	tblptrl,c
   674  0103D4  0E01               	movlw	high __pidataBANK6
   675  0103D6  6EF7               	movwf	tblptrh,c
   676  0103D8  0E01               	movlw	low (__pidataBANK6 shr (0+16))
   677  0103DA  6EF8               	movwf	tblptru,c
   678  0103DC  EE01  F200         	lfsr	0,__pdataBANK6
   679  0103E0  EE10 F100          	lfsr	1,256
   680  0103E4                     copy_data0:
   681  0103E4  0009               	tblrd		*+
   682  0103E6  C4F5 F4EE          	movff	tablat,postinc0
   683  0103EA  50E5               	movf	postdec1,w,c
   684  0103EC  50E1               	movf	fsr1l,w,c
   685  0103EE  E1FA               	bnz	copy_data0
   686  0103F0  50E2               	movf	fsr1h,w,c
   687  0103F2  E1F8               	bnz	copy_data0
   688                           
   689                           ; Initialize objects allocated to COMRAM (6 bytes)
   690                           ; load TBLPTR registers with __pidataCOMRAM
   691  0103F4  0ECA               	movlw	low __pidataCOMRAM
   692  0103F6  6EF6               	movwf	tblptrl,c
   693  0103F8  0E06               	movlw	high __pidataCOMRAM
   694  0103FA  6EF7               	movwf	tblptrh,c
   695  0103FC  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   696  0103FE  6EF8               	movwf	tblptru,c
   697  010400  EE01  F125         	lfsr	0,__pdataCOMRAM
   698  010404  EE10 F006          	lfsr	1,6
   699  010408                     copy_data1:
   700  010408  0009               	tblrd		*+
   701  01040A  C4F5 F4EE          	movff	tablat,postinc0
   702  01040E  50E5               	movf	postdec1,w,c
   703  010410  50E1               	movf	fsr1l,w,c
   704  010412  E1FA               	bnz	copy_data1
   705                           
   706                           ; Clear objects allocated to BIGRAM (1536 bytes)
   707  010414  EE01  F300         	lfsr	0,__pbssBIGRAM
   708  010418  EE11 F200          	lfsr	1,1536
   709  01041C                     clear_0:
   710  01041C  6AEE               	clrf	postinc0,c
   711  01041E  50E5               	movf	postdec1,w,c
   712  010420  50E1               	movf	fsr1l,w,c
   713  010422  E1FC               	bnz	clear_0
   714  010424  50E2               	movf	fsr1h,w,c
   715  010426  E1FA               	bnz	clear_0
   716                           
   717                           ; Clear objects allocated to COMRAM (18 bytes)
   718  010428  EE01  F101         	lfsr	0,__pbssCOMRAM
   719  01042C  0E12               	movlw	18
   720  01042E                     clear_1:
   721  01042E  6AEE               	clrf	postinc0,c
   722  010430  06E8               	decf	wreg,f,c
   723  010432  E1FD               	bnz	clear_1
   724                           
   725                           ;
   726                           ; Setup IVTBASE
   727                           ;
   728  010434  0104               	movlb	4
   729  010436  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   730  010438  6F5D               	movwf	93,b
   731  01043A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   732  01043C  6F5E               	movwf	94,b
   733  01043E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   734  010440  6F5F               	movwf	95,b
   735  010442                     end_of_initialization:
   736                           	callstack 0
   737  010442                     __end_of__initialization:
   738                           	callstack 0
   739  010442  0E00               	movlw	low (__Lmediumconst shr (0+16))
   740  010444  6EF8               	movwf	tblptru,c
   741  010446  0100               	movlb	0
   742  010448  EF62  F082         	goto	_main	;jump to C main() function
   743                           
   744                           	psect	bssCOMRAM
   745  000501                     __pbssCOMRAM:
   746                           	callstack 0
   747  000501                     DEFAULT_ISR@u32UnhandledCounter:
   748                           	callstack 0
   749  000501                     	ds	4
   750  000505                     _G_u32SystemTime1s:
   751                           	callstack 0
   752  000505                     	ds	4
   753  000509                     _G_u32SystemTime1ms:
   754                           	callstack 0
   755  000509                     	ds	4
   756  00050D                     _G_u8SDCurrentRxBuffer:
   757                           	callstack 0
   758  00050D                     	ds	1
   759  00050E                     	ds	1
   760  00050F                     _G_u8UserAppTimePeriodLo:
   761                           	callstack 0
   762  00050F                     	ds	1
   763  000510                     _G_u8UserAppTimePeriodHi:
   764                           	callstack 0
   765  000510                     	ds	1
   766  000511                     _G_u8UserAppFlags:
   767                           	callstack 0
   768  000511                     	ds	1
   769  000512                     _G_u8SystemFlags:
   770                           	callstack 0
   771  000512                     	ds	1
   772                           
   773                           	psect	dataCOMRAM
   774  000525                     __pdataCOMRAM:
   775                           	callstack 0
   776  000525                     _G_au8SDResp40:
   777                           	callstack 0
   778  000525                     	ds	5
   779  00052A                     _G_u8SDResp8:
   780                           	callstack 0
   781  00052A                     	ds	1
   782                           
   783                           	psect	dataBANK6
   784  000600                     __pdataBANK6:
   785                           	callstack 0
   786  000600                     _G_au8UserAppsinTable:
   787                           	callstack 0
   788  000600                     	ds	256
   789                           
   790                           	psect	bssBIGRAM
   791  000700                     __pbssBIGRAM:
   792                           	callstack 0
   793  000700                     _G_au8SDWriteBuffer:
   794                           	callstack 0
   795  000700                     	ds	512
   796  000900                     _G_au8SDReadBuffer1:
   797                           	callstack 0
   798  000900                     	ds	512
   799  000B00                     _G_au8SDReadBuffer0:
   800                           	callstack 0
   801  000B00                     	ds	512
   802                           
   803                           	psect	cstackCOMRAM
   804  000513                     __pcstackCOMRAM:
   805                           	callstack 0
   806  000513                     ??_DEFAULT_ISR:
   807  000513                     
   808                           ; 1 bytes @ 0x0
   809  000513                     	ds	1
   810  000514                     SD_Read8bitResponse@u8ReadMessage:
   811                           	callstack 0
   812  000514                     SD_Check8bitResponse@u8Byte_:
   813                           	callstack 0
   814  000514                     SD_Read40bitResponse@u8ReadMessage:
   815                           	callstack 0
   816  000514                     SD_Check40bitResponse@u8Byte3_:
   817                           	callstack 0
   818  000514                     SPI_Write@u8DataByte_:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x1
   822  000514                     	ds	1
   823  000515                     SD_SendCommand@u8Arg3_:
   824                           	callstack 0
   825  000515                     SD_Check8bitResponse@bMatch:
   826                           	callstack 0
   827  000515                     SD_Check40bitResponse@u8Byte2_:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x2
   831  000515                     	ds	1
   832  000516                     SD_SendCommand@u8Arg2_:
   833                           	callstack 0
   834  000516                     SD_Check40bitResponse@u8Byte1_:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x3
   838  000516                     	ds	1
   839  000517                     SD_SendCommand@u8Arg1_:
   840                           	callstack 0
   841  000517                     SD_Check40bitResponse@u8Byte0_:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x4
   845  000517                     	ds	1
   846  000518                     SD_SendCommand@u8Arg0_:
   847                           	callstack 0
   848  000518                     SD_Check40bitResponse@u8Byte4_:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x5
   852  000518                     	ds	1
   853  000519                     SD_SendCommand@u8CMD6bit_:
   854                           	callstack 0
   855  000519                     SD_Check40bitResponse@bMatch:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x6
   859  000519                     	ds	1
   860  00051A                     SD_SendCommand@u8ByteToSend:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x7
   864  00051A                     	ds	1
   865  00051B                     SD_SendCommand@u8Checksum:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x8
   869  00051B                     	ds	1
   870  00051C                     SD_ReadBlock@u8Addr2_:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x9
   874  00051C                     	ds	1
   875  00051D                     SD_ReadBlock@u8Addr1_:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0xA
   879  00051D                     	ds	1
   880  00051E                     SD_ReadBlock@u8Addr0_:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0xB
   884  00051E                     	ds	1
   885  00051F                     SD_ReadBlock@u8Addr3_:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0xC
   889  00051F                     	ds	1
   890  000520                     SD_ReadBlock@pu8RxBuffer:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0xD
   894  000520                     	ds	2
   895  000522                     SD_ReadBlock@u8ReadMessage:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0xF
   899  000522                     	ds	1
   900  000523                     SD_ReadBlock@i:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x10
   904  000523                     	ds	2
   905  000525                     
   906                           ; 1 bytes @ 0x12
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 34 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels required when called:    5
   932 ;; This function calls:
   933 ;;		_ClockSetup
   934 ;;		_GpioSetup
   935 ;;		_InterruptSetup
   936 ;;		_SD_Init
   937 ;;		_SD_ReadBlock
   938 ;;		_SPI_Init
   939 ;;		_SysTickSetup
   940 ;;		_SystemSleep
   941 ;;		_UserAppInitialize
   942 ;;		_UserAppRun
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text0
   949  0104C4                     __ptext0:
   950                           	callstack 0
   951  0104C4                     _main:
   952                           	callstack 123
   953  0104C4                     
   954                           ;main.c: 36:   G_u8SystemFlags |= (u8)0x80;
   955  0104C4  8E12               	bsf	_G_u8SystemFlags^(0+1280),7,c	;volatile
   956  0104C6                     
   957                           ;main.c: 39:   ClockSetup();
   958  0104C6  EC6B  F083         	call	_ClockSetup	;wreg free
   959  0104CA                     
   960                           ;main.c: 40:   GpioSetup();
   961  0104CA  ECBC  F082         	call	_GpioSetup	;wreg free
   962  0104CE                     
   963                           ;main.c: 41:   InterruptSetup();
   964  0104CE  EC61  F083         	call	_InterruptSetup	;wreg free
   965  0104D2                     
   966                           ;main.c: 43:   SysTickSetup();
   967  0104D2  ECA2  F082         	call	_SysTickSetup	;wreg free
   968  0104D6                     
   969                           ;main.c: 46:   SPI_Init();
   970  0104D6  EC26  F083         	call	_SPI_Init	;wreg free
   971  0104DA                     
   972                           ;main.c: 47:   SD_Init();
   973  0104DA  EC00  F080         	call	_SD_Init	;wreg free
   974  0104DE                     
   975                           ;main.c: 50:   UserAppInitialize();
   976  0104DE  EC18  F083         	call	_UserAppInitialize	;wreg free
   977  0104E2                     
   978                           ;main.c: 52:   SD_ReadBlock(0x00,0x00,0x00,0x00);
   979  0104E2  0E00               	movlw	0
   980  0104E4  6E1C               	movwf	SD_ReadBlock@u8Addr2_^(0+1280),c
   981  0104E6  0E00               	movlw	0
   982  0104E8  6E1D               	movwf	SD_ReadBlock@u8Addr1_^(0+1280),c
   983  0104EA  0E00               	movlw	0
   984  0104EC  6E1E               	movwf	SD_ReadBlock@u8Addr0_^(0+1280),c
   985  0104EE  0E00               	movlw	0
   986  0104F0  EC82  F081         	call	_SD_ReadBlock
   987  0104F4                     
   988                           ;main.c: 53:   __nop();
   989  0104F4  F000               	nop	
   990  0104F6                     
   991                           ;main.c: 56:   G_u8SystemFlags &= ~(u8)0x80;
   992  0104F6  9E12               	bcf	_G_u8SystemFlags^(0+1280),7,c	;volatile
   993  0104F8                     l1592:
   994                           
   995                           ;main.c: 60:   {;main.c: 64:     UserAppRun();
   996  0104F8  EC6A  F083         	call	_UserAppRun	;wreg free
   997  0104FC                     
   998                           ;main.c: 67:     (LATA &= 0x7F);
   999  0104FC  9EBE               	bcf	190,7,c	;volatile
  1000  0104FE                     
  1001                           ;main.c: 68:     SystemSleep();
  1002  0104FE  EC4F  F083         	call	_SystemSleep	;wreg free
  1003  010502                     
  1004                           ;main.c: 69:     (LATA |= 0x80);
  1005  010502  8EBE               	bsf	190,7,c	;volatile
  1006  010504  EF7C  F082         	goto	l1592
  1007  010508  EF81  F000         	goto	start
  1008  01050C                     __end_of_main:
  1009                           	callstack 0
  1010                           
  1011 ;; *************** function _UserAppRun *****************
  1012 ;; Defined at:
  1013 ;;		line 235 in file "user_app.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		None
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    2
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text1
  1042  0106D4                     __ptext1:
  1043                           	callstack 0
  1044  0106D4                     _UserAppRun:
  1045                           	callstack 125
  1046  0106D4  0012               	return		;funcret
  1047  0106D6                     __end_of_UserAppRun:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _UserAppInitialize *****************
  1051 ;; Defined at:
  1052 ;;		line 204 in file "user_app.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    2
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text2
  1081  010630                     __ptext2:
  1082                           	callstack 0
  1083  010630                     _UserAppInitialize:
  1084                           	callstack 125
  1085  010630                     
  1086                           ;user_app.c: 207:     LATA &= 0xC0;
  1087  010630  0EC0               	movlw	192
  1088  010632  16BE               	andwf	190,f,c	;volatile
  1089  010634                     
  1090                           ;user_app.c: 211:     T0CON0 = 0x90;
  1091  010634  0E90               	movlw	144
  1092  010636  0103               	movlb	3	; () banked
  1093  010638  6F1A               	movwf	26,b	;volatile
  1094  01063A                     
  1095                           ; BSR set to: 3
  1096                           ;user_app.c: 212:     T0CON1 = 0x54;
  1097  01063A  0E54               	movlw	84
  1098  01063C  6F1B               	movwf	27,b	;volatile
  1099  01063E                     
  1100                           ; BSR set to: 3
  1101                           ;user_app.c: 216:     T1GCON = 0x00;
  1102  01063E  0E00               	movlw	0
  1103  010640  6F1F               	movwf	31,b	;volatile
  1104  010642                     
  1105                           ; BSR set to: 3
  1106                           ;user_app.c: 217:     T1CLK = 0x01;
  1107  010642  0E01               	movlw	1
  1108  010644  6F21               	movwf	33,b	;volatile
  1109  010646                     
  1110                           ; BSR set to: 3
  1111                           ;user_app.c: 218:     T1CON = 0x31;
  1112  010646  0E31               	movlw	49
  1113  010648  6F1E               	movwf	30,b	;volatile
  1114  01064A                     
  1115                           ; BSR set to: 3
  1116  01064A  0012               	return		;funcret
  1117  01064C                     __end_of_UserAppInitialize:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _SystemSleep *****************
  1121 ;; Defined at:
  1122 ;;		line 161 in file "encm369_pic18.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    2
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text3
  1151  01069E                     __ptext3:
  1152                           	callstack 0
  1153  01069E                     _SystemSleep:
  1154                           	callstack 125
  1155  01069E                     
  1156                           ;encm369_pic18.c: 163:   G_u8SystemFlags |= (u8)0x40;
  1157  01069E  8C12               	bsf	_G_u8SystemFlags^(0+1280),6,c	;volatile
  1158  0106A0                     l52:
  1159  0106A0  BC12               	btfsc	_G_u8SystemFlags^(0+1280),6,c	;volatile
  1160  0106A2  EF55  F083         	goto	u361
  1161  0106A6  EF57  F083         	goto	u360
  1162  0106AA                     u361:
  1163  0106AA  EF50  F083         	goto	l52
  1164  0106AE                     u360:
  1165  0106AE  0012               	return		;funcret
  1166  0106B0                     __end_of_SystemSleep:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _SysTickSetup *****************
  1170 ;; Defined at:
  1171 ;;		line 126 in file "encm369_pic18.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    2
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text4
  1200  010544                     __ptext4:
  1201                           	callstack 0
  1202  010544                     _SysTickSetup:
  1203                           	callstack 125
  1204  010544                     
  1205                           ;encm369_pic18.c: 128:   G_u32SystemTime1ms = 0;
  1206  010544  0E00               	movlw	0
  1207  010546  6E09               	movwf	_G_u32SystemTime1ms^(0+1280),c	;volatile
  1208  010548  0E00               	movlw	0
  1209  01054A  6E0A               	movwf	(_G_u32SystemTime1ms+1)^(0+1280),c	;volatile
  1210  01054C  0E00               	movlw	0
  1211  01054E  6E0B               	movwf	(_G_u32SystemTime1ms+2)^(0+1280),c	;volatile
  1212  010550  0E00               	movlw	0
  1213  010552  6E0C               	movwf	(_G_u32SystemTime1ms+3)^(0+1280),c	;volatile
  1214                           
  1215                           ;encm369_pic18.c: 129:   G_u32SystemTime1s = 0;
  1216  010554  0E00               	movlw	0
  1217  010556  6E05               	movwf	_G_u32SystemTime1s^(0+1280),c	;volatile
  1218  010558  0E00               	movlw	0
  1219  01055A  6E06               	movwf	(_G_u32SystemTime1s+1)^(0+1280),c	;volatile
  1220  01055C  0E00               	movlw	0
  1221  01055E  6E07               	movwf	(_G_u32SystemTime1s+2)^(0+1280),c	;volatile
  1222  010560  0E00               	movlw	0
  1223  010562  6E08               	movwf	(_G_u32SystemTime1s+3)^(0+1280),c	;volatile
  1224                           
  1225                           ;encm369_pic18.c: 137:   T2PR = 125;
  1226  010564  0E7D               	movlw	125
  1227  010566  0103               	movlb	3	; () banked
  1228  010568  6F23               	movwf	35,b	;volatile
  1229                           
  1230                           ;encm369_pic18.c: 138:   T2CLKCON = 0x01;
  1231  01056A  0E01               	movlw	1
  1232  01056C  6F26               	movwf	38,b	;volatile
  1233  01056E                     
  1234                           ; BSR set to: 3
  1235                           ;encm369_pic18.c: 139:   PIR3bits.TMR2IF = 0;
  1236  01056E  96B1               	bcf	177,3,c	;volatile
  1237                           
  1238                           ;encm369_pic18.c: 140:   T2CON = 0xF0;
  1239  010570  0EF0               	movlw	240
  1240  010572  6F24               	movwf	36,b	;volatile
  1241  010574                     
  1242                           ; BSR set to: 3
  1243                           ;encm369_pic18.c: 142:   PIE3bits.TMR2IE = 1;
  1244  010574  86A1               	bsf	161,3,c	;volatile
  1245  010576                     
  1246                           ; BSR set to: 3
  1247  010576  0012               	return		;funcret
  1248  010578                     __end_of_SysTickSetup:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _SPI_Init *****************
  1252 ;; Defined at:
  1253 ;;		line 35 in file "spi.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    2
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text5
  1282  01064C                     __ptext5:
  1283                           	callstack 0
  1284  01064C                     _SPI_Init:
  1285                           	callstack 125
  1286  01064C                     
  1287                           ;spi.c: 37:   SPI1CON0bits.EN = 0;
  1288  01064C  0100               	movlb	0	; () banked
  1289  01064E  9F84               	bcf	132,7,b	;volatile
  1290  010650                     
  1291                           ; BSR set to: 0
  1292                           ;spi.c: 40:   SPI1CON0 = 0x03;
  1293  010650  0E03               	movlw	3
  1294  010652  6F84               	movwf	132,b	;volatile
  1295                           
  1296                           ;spi.c: 44:   SPI1CON1 = 0xA4;
  1297  010654  0EA4               	movlw	164
  1298  010656  6F85               	movwf	133,b	;volatile
  1299                           
  1300                           ;spi.c: 47:   SPI1CON2 = 0x07;
  1301  010658  0E07               	movlw	7
  1302  01065A  6F86               	movwf	134,b	;volatile
  1303                           
  1304                           ;spi.c: 50:   SPI1CLK = 0x00;
  1305  01065C  0E00               	movlw	0
  1306  01065E  6F8C               	movwf	140,b	;volatile
  1307                           
  1308                           ;spi.c: 51:   SPI1BAUD = 3;
  1309  010660  0E03               	movlw	3
  1310  010662  6F89               	movwf	137,b	;volatile
  1311  010664                     
  1312                           ; BSR set to: 0
  1313                           ;spi.c: 54:   SPI1CON0bits.EN = 1;
  1314  010664  8F84               	bsf	132,7,b	;volatile
  1315  010666                     
  1316                           ; BSR set to: 0
  1317  010666  0012               	return		;funcret
  1318  010668                     __end_of_SPI_Init:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _SD_ReadBlock *****************
  1322 ;; Defined at:
  1323 ;;		line 283 in file "sd.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  u8Addr3_        1    wreg     unsigned char 
  1326 ;;  u8Addr2_        1    9[COMRAM] unsigned char 
  1327 ;;  u8Addr1_        1   10[COMRAM] unsigned char 
  1328 ;;  u8Addr0_        1   11[COMRAM] unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  u8Addr3_        1   12[COMRAM] unsigned char 
  1331 ;;  i               2   16[COMRAM] unsigned short 
  1332 ;;  pu8RxBuffer     2   13[COMRAM] PTR unsigned char 
  1333 ;;		 -> G_au8SDReadBuffer1(512), G_au8SDReadBuffer0(512), 
  1334 ;;  u8ReadMessag    1   15[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      _Bool 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1344 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1345 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1347 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1348 ;;Total ram usage:        9 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    4
  1351 ;; This function calls:
  1352 ;;		_SD_Check8bitResponse
  1353 ;;		_SD_Read8bitResponse
  1354 ;;		_SD_SendCommand
  1355 ;;		_SPI_Read
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text6
  1362  010304                     __ptext6:
  1363                           	callstack 0
  1364  010304                     _SD_ReadBlock:
  1365                           	callstack 123
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;incstack = 0
  1369                           ;SD_ReadBlock@u8Addr3_ stored from wreg
  1370  010304  6E1F               	movwf	SD_ReadBlock@u8Addr3_^(0+1280),c
  1371  010306                     
  1372                           ;sd.c: 286:     u8* pu8RxBuffer;;sd.c: 290:     SD_SendCommand(17, u8Addr3_, u8Addr2_, u
      +                          8Addr1_, u8Addr0_);
  1373  010306  C51F  F515         	movff	SD_ReadBlock@u8Addr3_,SD_SendCommand@u8Arg3_
  1374  01030A  C51C  F516         	movff	SD_ReadBlock@u8Addr2_,SD_SendCommand@u8Arg2_
  1375  01030E  C51D  F517         	movff	SD_ReadBlock@u8Addr1_,SD_SendCommand@u8Arg1_
  1376  010312  C51E  F518         	movff	SD_ReadBlock@u8Addr0_,SD_SendCommand@u8Arg0_
  1377  010316  0E11               	movlw	17
  1378  010318  EC0D  F081         	call	_SD_SendCommand
  1379  01031C                     
  1380                           ;sd.c: 293:     SD_Read8bitResponse();
  1381  01031C  ECF8  F082         	call	_SD_Read8bitResponse	;wreg free
  1382  010320                     
  1383                           ;sd.c: 296:     if(SD_Check8bitResponse(0x00) == 0) return 0;
  1384  010320  0E00               	movlw	0
  1385  010322  EC08  F083         	call	_SD_Check8bitResponse
  1386  010326  0900               	iorlw	0
  1387  010328  A4D8               	btfss	status,2,c
  1388  01032A  EF99  F081         	goto	u411
  1389  01032E  EF9B  F081         	goto	u410
  1390  010332                     u411:
  1391  010332  EF9D  F081         	goto	l1538
  1392  010336                     u410:
  1393  010336  EFE7  F081         	goto	l278
  1394  01033A                     l1538:
  1395                           
  1396                           ;sd.c: 301:     {;sd.c: 302:       u8ReadMessage = SPI_Read();
  1397  01033A  EC34  F083         	call	_SPI_Read	;wreg free
  1398  01033E  6E22               	movwf	SD_ReadBlock@u8ReadMessage^(0+1280),c
  1399  010340                     
  1400                           ;sd.c: 303:     }
  1401  010340  2822               	incf	SD_ReadBlock@u8ReadMessage^(0+1280),w,c
  1402  010342  B4D8               	btfsc	status,2,c
  1403  010344  EFA6  F081         	goto	u421
  1404  010348  EFA8  F081         	goto	u420
  1405  01034C                     u421:
  1406  01034C  EF9D  F081         	goto	l1538
  1407  010350                     u420:
  1408  010350                     
  1409                           ;sd.c: 307:     if (u8ReadMessage != 0xFE)
  1410  010350  0EFE               	movlw	254
  1411  010352  1822               	xorwf	SD_ReadBlock@u8ReadMessage^(0+1280),w,c
  1412  010354  B4D8               	btfsc	status,2,c
  1413  010356  EFAF  F081         	goto	u431
  1414  01035A  EFB1  F081         	goto	u430
  1415  01035E                     u431:
  1416  01035E  EFB3  F081         	goto	l1546
  1417  010362                     u430:
  1418  010362  EFE7  F081         	goto	l278
  1419  010366                     l1546:
  1420                           
  1421                           ;sd.c: 313:     if(G_u8SDCurrentRxBuffer == 0)
  1422  010366  500D               	movf	_G_u8SDCurrentRxBuffer^(0+1280),w,c	;volatile
  1423  010368  A4D8               	btfss	status,2,c
  1424  01036A  EFB9  F081         	goto	u441
  1425  01036E  EFBB  F081         	goto	u440
  1426  010372                     u441:
  1427  010372  EFC3  F081         	goto	l1552
  1428  010376                     u440:
  1429  010376                     
  1430                           ;sd.c: 314:     {;sd.c: 315:       pu8RxBuffer = &G_au8SDReadBuffer0[0];
  1431  010376  0E00               	movlw	low _G_au8SDReadBuffer0
  1432  010378  6E20               	movwf	SD_ReadBlock@pu8RxBuffer^(0+1280),c
  1433  01037A  0E0B               	movlw	high _G_au8SDReadBuffer0
  1434  01037C  6E21               	movwf	(SD_ReadBlock@pu8RxBuffer+1)^(0+1280),c
  1435  01037E                     
  1436                           ;sd.c: 316:       G_u8SDCurrentRxBuffer = 1;
  1437  01037E  0E01               	movlw	1
  1438  010380  6E0D               	movwf	_G_u8SDCurrentRxBuffer^(0+1280),c	;volatile
  1439                           
  1440                           ;sd.c: 317:     }
  1441  010382  EFC9  F081         	goto	l1556
  1442  010386                     l1552:
  1443                           
  1444                           ;sd.c: 319:     {;sd.c: 320:       pu8RxBuffer = &G_au8SDReadBuffer1[0];
  1445  010386  0E00               	movlw	low _G_au8SDReadBuffer1
  1446  010388  6E20               	movwf	SD_ReadBlock@pu8RxBuffer^(0+1280),c
  1447  01038A  0E09               	movlw	high _G_au8SDReadBuffer1
  1448  01038C  6E21               	movwf	(SD_ReadBlock@pu8RxBuffer+1)^(0+1280),c
  1449  01038E                     
  1450                           ;sd.c: 321:       G_u8SDCurrentRxBuffer = 0;
  1451  01038E  0E00               	movlw	0
  1452  010390  6E0D               	movwf	_G_u8SDCurrentRxBuffer^(0+1280),c	;volatile
  1453  010392                     l1556:
  1454                           
  1455                           ;sd.c: 325:     for(u16 i = 0; i < 512; i++)
  1456  010392  0E00               	movlw	0
  1457  010394  6E24               	movwf	(SD_ReadBlock@i+1)^(0+1280),c
  1458  010396  0E00               	movlw	0
  1459  010398  6E23               	movwf	SD_ReadBlock@i^(0+1280),c
  1460  01039A                     l1560:
  1461                           
  1462                           ;sd.c: 326:     {;sd.c: 327:      *(pu8RxBuffer + i) = SPI_Read();
  1463  01039A  5023               	movf	SD_ReadBlock@i^(0+1280),w,c
  1464  01039C  2420               	addwf	SD_ReadBlock@pu8RxBuffer^(0+1280),w,c
  1465  01039E  6ED9               	movwf	fsr2l,c
  1466  0103A0  5024               	movf	(SD_ReadBlock@i+1)^(0+1280),w,c
  1467  0103A2  2021               	addwfc	(SD_ReadBlock@pu8RxBuffer+1)^(0+1280),w,c
  1468  0103A4  6EDA               	movwf	fsr2h,c
  1469  0103A6  EC34  F083         	call	_SPI_Read	;wreg free
  1470  0103AA  6EDF               	movwf	indf2,c
  1471  0103AC                     
  1472                           ;sd.c: 328:     }
  1473  0103AC  4A23               	infsnz	SD_ReadBlock@i^(0+1280),f,c
  1474  0103AE  2A24               	incf	(SD_ReadBlock@i+1)^(0+1280),f,c
  1475  0103B0  0E02               	movlw	2
  1476  0103B2  5C24               	subwf	(SD_ReadBlock@i+1)^(0+1280),w,c
  1477  0103B4  A0D8               	btfss	status,0,c
  1478  0103B6  EFDF  F081         	goto	u451
  1479  0103BA  EFE1  F081         	goto	u450
  1480  0103BE                     u451:
  1481  0103BE  EFCD  F081         	goto	l1560
  1482  0103C2                     u450:
  1483  0103C2                     
  1484                           ;sd.c: 331:     SPI_Read();
  1485  0103C2  EC34  F083         	call	_SPI_Read	;wreg free
  1486                           
  1487                           ;sd.c: 332:     SPI_Read();
  1488  0103C6  EC34  F083         	call	_SPI_Read	;wreg free
  1489                           
  1490                           ;sd.c: 335:     SPI_Read();
  1491  0103CA  EC34  F083         	call	_SPI_Read	;wreg free
  1492  0103CE                     l278:
  1493  0103CE  0012               	return		;funcret
  1494  0103D0                     __end_of_SD_ReadBlock:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _SD_Init *****************
  1498 ;; Defined at:
  1499 ;;		line 46 in file "sd.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    4
  1520 ;; This function calls:
  1521 ;;		_SD_Check40bitResponse
  1522 ;;		_SD_Check8bitResponse
  1523 ;;		_SD_Read40bitResponse
  1524 ;;		_SD_Read8bitResponse
  1525 ;;		_SD_SendCommand
  1526 ;;		_SPI_Write
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text7
  1533  010000                     __ptext7:
  1534                           	callstack 0
  1535  010000                     _SD_Init:
  1536                           	callstack 123
  1537  010000                     
  1538                           ;sd.c: 50:     (LATCbits.LATC7 = 1);
  1539  010000  8EC0               	bsf	192,7,c	;volatile
  1540  010002                     
  1541                           ;sd.c: 52:     SPI_Write(0xFF);
  1542  010002  0EFF               	movlw	255
  1543  010004  ECE8  F082         	call	_SPI_Write
  1544                           
  1545                           ;sd.c: 53:     SPI_Write(0xFF);
  1546  010008  0EFF               	movlw	255
  1547  01000A  ECE8  F082         	call	_SPI_Write
  1548                           
  1549                           ;sd.c: 54:     SPI_Write(0xFF);
  1550  01000E  0EFF               	movlw	255
  1551  010010  ECE8  F082         	call	_SPI_Write
  1552                           
  1553                           ;sd.c: 55:     SPI_Write(0xFF);
  1554  010014  0EFF               	movlw	255
  1555  010016  ECE8  F082         	call	_SPI_Write
  1556                           
  1557                           ;sd.c: 56:     SPI_Write(0xFF);
  1558  01001A  0EFF               	movlw	255
  1559  01001C  ECE8  F082         	call	_SPI_Write
  1560                           
  1561                           ;sd.c: 57:     SPI_Write(0xFF);
  1562  010020  0EFF               	movlw	255
  1563  010022  ECE8  F082         	call	_SPI_Write
  1564                           
  1565                           ;sd.c: 58:     SPI_Write(0xFF);
  1566  010026  0EFF               	movlw	255
  1567  010028  ECE8  F082         	call	_SPI_Write
  1568                           
  1569                           ;sd.c: 59:     SPI_Write(0xFF);
  1570  01002C  0EFF               	movlw	255
  1571  01002E  ECE8  F082         	call	_SPI_Write
  1572                           
  1573                           ;sd.c: 60:     SPI_Write(0xFF);
  1574  010032  0EFF               	movlw	255
  1575  010034  ECE8  F082         	call	_SPI_Write
  1576                           
  1577                           ;sd.c: 61:     SPI_Write(0xFF);
  1578  010038  0EFF               	movlw	255
  1579  01003A  ECE8  F082         	call	_SPI_Write
  1580  01003E                     
  1581                           ;sd.c: 63:     (LATCbits.LATC7 = 0);
  1582  01003E  9EC0               	bcf	192,7,c	;volatile
  1583  010040                     l1492:
  1584                           
  1585                           ;sd.c: 70:         SD_SendCommand(0, 0x00, 0x00, 0x00, 0x00);
  1586  010040  0E00               	movlw	0
  1587  010042  6E15               	movwf	SD_SendCommand@u8Arg3_^(0+1280),c
  1588  010044  0E00               	movlw	0
  1589  010046  6E16               	movwf	SD_SendCommand@u8Arg2_^(0+1280),c
  1590  010048  0E00               	movlw	0
  1591  01004A  6E17               	movwf	SD_SendCommand@u8Arg1_^(0+1280),c
  1592  01004C  0E00               	movlw	0
  1593  01004E  6E18               	movwf	SD_SendCommand@u8Arg0_^(0+1280),c
  1594  010050  0E00               	movlw	0
  1595  010052  EC0D  F081         	call	_SD_SendCommand
  1596  010056                     
  1597                           ;sd.c: 71:         SD_Read8bitResponse();
  1598  010056  ECF8  F082         	call	_SD_Read8bitResponse	;wreg free
  1599  01005A  F000               	nop		;# 
  1600  01005C                     
  1601                           ;sd.c: 73:     } while (SD_Check8bitResponse(0x01) == 0);
  1602  01005C  0E01               	movlw	1
  1603  01005E  EC08  F083         	call	_SD_Check8bitResponse
  1604  010062  0900               	iorlw	0
  1605  010064  B4D8               	btfsc	status,2,c
  1606  010066  EF37  F080         	goto	u371
  1607  01006A  EF39  F080         	goto	u370
  1608  01006E                     u371:
  1609  01006E  EF20  F080         	goto	l1492
  1610  010072                     u370:
  1611  010072                     l1498:
  1612                           
  1613                           ;sd.c: 80:         SD_SendCommand(8, 0x00, 0x00, 0x01, 0xAA);
  1614  010072  0E00               	movlw	0
  1615  010074  6E15               	movwf	SD_SendCommand@u8Arg3_^(0+1280),c
  1616  010076  0E00               	movlw	0
  1617  010078  6E16               	movwf	SD_SendCommand@u8Arg2_^(0+1280),c
  1618  01007A  0E01               	movlw	1
  1619  01007C  6E17               	movwf	SD_SendCommand@u8Arg1_^(0+1280),c
  1620  01007E  0EAA               	movlw	170
  1621  010080  6E18               	movwf	SD_SendCommand@u8Arg0_^(0+1280),c
  1622  010082  0E08               	movlw	8
  1623  010084  EC0D  F081         	call	_SD_SendCommand
  1624  010088                     
  1625                           ;sd.c: 81:         SD_Read40bitResponse();
  1626  010088  EC86  F082         	call	_SD_Read40bitResponse	;wreg free
  1627  01008C  F000               	nop		;# 
  1628  01008E                     
  1629                           ;sd.c: 83:     } while (SD_Check40bitResponse(0x01, 0x00, 0x00, 0x01, 0xAA) == 0);
  1630  01008E  0E00               	movlw	0
  1631  010090  6E14               	movwf	SD_Check40bitResponse@u8Byte3_^(0+1280),c
  1632  010092  0E00               	movlw	0
  1633  010094  6E15               	movwf	SD_Check40bitResponse@u8Byte2_^(0+1280),c
  1634  010096  0E01               	movlw	1
  1635  010098  6E16               	movwf	SD_Check40bitResponse@u8Byte1_^(0+1280),c
  1636  01009A  0EAA               	movlw	170
  1637  01009C  6E17               	movwf	SD_Check40bitResponse@u8Byte0_^(0+1280),c
  1638  01009E  0E01               	movlw	1
  1639  0100A0  EC26  F082         	call	_SD_Check40bitResponse
  1640  0100A4  0900               	iorlw	0
  1641  0100A6  B4D8               	btfsc	status,2,c
  1642  0100A8  EF58  F080         	goto	u381
  1643  0100AC  EF5A  F080         	goto	u380
  1644  0100B0                     u381:
  1645  0100B0  EF39  F080         	goto	l1498
  1646  0100B4                     u380:
  1647  0100B4                     l1504:
  1648                           
  1649                           ;sd.c: 92:       {;sd.c: 93:           SD_SendCommand(55, 0x00, 0x00, 0x00, 0x00);
  1650  0100B4  0E00               	movlw	0
  1651  0100B6  6E15               	movwf	SD_SendCommand@u8Arg3_^(0+1280),c
  1652  0100B8  0E00               	movlw	0
  1653  0100BA  6E16               	movwf	SD_SendCommand@u8Arg2_^(0+1280),c
  1654  0100BC  0E00               	movlw	0
  1655  0100BE  6E17               	movwf	SD_SendCommand@u8Arg1_^(0+1280),c
  1656  0100C0  0E00               	movlw	0
  1657  0100C2  6E18               	movwf	SD_SendCommand@u8Arg0_^(0+1280),c
  1658  0100C4  0E37               	movlw	55
  1659  0100C6  EC0D  F081         	call	_SD_SendCommand
  1660  0100CA                     
  1661                           ;sd.c: 94:           SD_Read8bitResponse();
  1662  0100CA  ECF8  F082         	call	_SD_Read8bitResponse	;wreg free
  1663  0100CE  F000               	nop		;# 
  1664  0100D0                     
  1665                           ;sd.c: 96:       } while (SD_Check8bitResponse(0x01) == 0);
  1666  0100D0  0E01               	movlw	1
  1667  0100D2  EC08  F083         	call	_SD_Check8bitResponse
  1668  0100D6  0900               	iorlw	0
  1669  0100D8  B4D8               	btfsc	status,2,c
  1670  0100DA  EF71  F080         	goto	u391
  1671  0100DE  EF73  F080         	goto	u390
  1672  0100E2                     u391:
  1673  0100E2  EF5A  F080         	goto	l1504
  1674  0100E6                     u390:
  1675  0100E6                     
  1676                           ;sd.c: 103:       SD_SendCommand(41, 0x40, 0x00, 0x00, 0x00);
  1677  0100E6  0E40               	movlw	64
  1678  0100E8  6E15               	movwf	SD_SendCommand@u8Arg3_^(0+1280),c
  1679  0100EA  0E00               	movlw	0
  1680  0100EC  6E16               	movwf	SD_SendCommand@u8Arg2_^(0+1280),c
  1681  0100EE  0E00               	movlw	0
  1682  0100F0  6E17               	movwf	SD_SendCommand@u8Arg1_^(0+1280),c
  1683  0100F2  0E00               	movlw	0
  1684  0100F4  6E18               	movwf	SD_SendCommand@u8Arg0_^(0+1280),c
  1685  0100F6  0E29               	movlw	41
  1686  0100F8  EC0D  F081         	call	_SD_SendCommand
  1687  0100FC                     
  1688                           ;sd.c: 104:       SD_Read8bitResponse();
  1689  0100FC  ECF8  F082         	call	_SD_Read8bitResponse	;wreg free
  1690  010100  F000               	nop		;# 
  1691  010102                     
  1692                           ;sd.c: 106:     } while (SD_Check8bitResponse(0x00) == 0);
  1693  010102  0E00               	movlw	0
  1694  010104  EC08  F083         	call	_SD_Check8bitResponse
  1695  010108  0900               	iorlw	0
  1696  01010A  B4D8               	btfsc	status,2,c
  1697  01010C  EF8A  F080         	goto	u401
  1698  010110  EF8C  F080         	goto	u400
  1699  010114                     u401:
  1700  010114  EF5A  F080         	goto	l1504
  1701  010118                     u400:
  1702  010118  0012               	return		;funcret
  1703  01011A                     __end_of_SD_Init:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _SD_SendCommand *****************
  1707 ;; Defined at:
  1708 ;;		line 115 in file "sd.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  u8CMD6bit_      1    wreg     unsigned char 
  1711 ;;  u8Arg3_         1    2[COMRAM] unsigned char 
  1712 ;;  u8Arg2_         1    3[COMRAM] unsigned char 
  1713 ;;  u8Arg1_         1    4[COMRAM] unsigned char 
  1714 ;;  u8Arg0_         1    5[COMRAM] unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  u8CMD6bit_      1    6[COMRAM] unsigned char 
  1717 ;;  u8Checksum      1    8[COMRAM] unsigned char 
  1718 ;;  u8ByteToSend    1    7[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1731 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1732 ;;Total ram usage:        7 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    3
  1735 ;; This function calls:
  1736 ;;		_SPI_Write
  1737 ;; This function is called by:
  1738 ;;		_SD_Init
  1739 ;;		_SD_ReadBlock
  1740 ;;		_SD_WriteBlock
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text8
  1745  01021A                     __ptext8:
  1746                           	callstack 0
  1747  01021A                     _SD_SendCommand:
  1748                           	callstack 123
  1749                           
  1750                           ;incstack = 0
  1751                           ;SD_SendCommand@u8CMD6bit_ stored from wreg
  1752  01021A  6E19               	movwf	SD_SendCommand@u8CMD6bit_^(0+1280),c
  1753  01021C                     
  1754                           ;sd.c: 118:     u8 u8Checksum = 0x00;
  1755  01021C  0E00               	movlw	0
  1756  01021E  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1757  010220                     
  1758                           ;sd.c: 121:     u8ByteToSend = (u8CMD6bit_ & 0x3F) | 0x40;
  1759  010220  5019               	movf	SD_SendCommand@u8CMD6bit_^(0+1280),w,c
  1760  010222  0B3F               	andlw	63
  1761  010224  0940               	iorlw	64
  1762  010226  6E1A               	movwf	SD_SendCommand@u8ByteToSend^(0+1280),c
  1763  010228                     
  1764                           ;sd.c: 122:     SPI_Write(u8ByteToSend);
  1765  010228  501A               	movf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1766  01022A  ECE8  F082         	call	_SPI_Write
  1767  01022E                     
  1768                           ;sd.c: 123:     { u8Checksum = (u8)(u8Checksum << 1); u8Checksum = u8Checksum ^ u8ByteTo
      +                          Send; u8Checksum = CRCTable[u8Checksum]; };
  1769  01022E  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1770  010230  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1771  010232  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1772  010234  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1773  010236  181A               	xorwf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1774  010238  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1775  01023A  0EFF               	movlw	low _CRCTable
  1776  01023C  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1777  01023E  6EF6               	movwf	tblptrl,c
  1778  010240  6AF7               	clrf	tblptrh,c
  1779  010242  0EFE               	movlw	high _CRCTable
  1780  010244  22F7               	addwfc	tblptrh,f,c
  1781  010246                     	if	0	;There are less than 3 active tblptr bytes
  1782  010246                     	endif
  1783  010246  0008               	tblrd		*
  1784  010248  0061 F3D4  F51B    	movff	tablat,SD_SendCommand@u8Checksum
  1785  01024E                     
  1786                           ;sd.c: 126:     u8ByteToSend = u8Arg3_;
  1787  01024E  C515  F51A         	movff	SD_SendCommand@u8Arg3_,SD_SendCommand@u8ByteToSend
  1788  010252                     
  1789                           ;sd.c: 127:     SPI_Write(u8ByteToSend);
  1790  010252  501A               	movf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1791  010254  ECE8  F082         	call	_SPI_Write
  1792  010258                     
  1793                           ;sd.c: 128:     { u8Checksum = (u8)(u8Checksum << 1); u8Checksum = u8Checksum ^ u8ByteTo
      +                          Send; u8Checksum = CRCTable[u8Checksum]; };
  1794  010258  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1795  01025A  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1796  01025C  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1797  01025E  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1798  010260  181A               	xorwf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1799  010262  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1800  010264  0EFF               	movlw	low _CRCTable
  1801  010266  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1802  010268  6EF6               	movwf	tblptrl,c
  1803  01026A  6AF7               	clrf	tblptrh,c
  1804  01026C  0EFE               	movlw	high _CRCTable
  1805  01026E  22F7               	addwfc	tblptrh,f,c
  1806  010270                     	if	0	;There are less than 3 active tblptr bytes
  1807  010270                     	endif
  1808  010270  0008               	tblrd		*
  1809  010272  0061 F3D4  F51B    	movff	tablat,SD_SendCommand@u8Checksum
  1810  010278                     
  1811                           ;sd.c: 130:     u8ByteToSend = u8Arg2_;
  1812  010278  C516  F51A         	movff	SD_SendCommand@u8Arg2_,SD_SendCommand@u8ByteToSend
  1813  01027C                     
  1814                           ;sd.c: 131:     SPI_Write(u8ByteToSend);
  1815  01027C  501A               	movf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1816  01027E  ECE8  F082         	call	_SPI_Write
  1817  010282                     
  1818                           ;sd.c: 132:     { u8Checksum = (u8)(u8Checksum << 1); u8Checksum = u8Checksum ^ u8ByteTo
      +                          Send; u8Checksum = CRCTable[u8Checksum]; };
  1819  010282  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1820  010284  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1821  010286  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1822  010288  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1823  01028A  181A               	xorwf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1824  01028C  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1825  01028E  0EFF               	movlw	low _CRCTable
  1826  010290  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1827  010292  6EF6               	movwf	tblptrl,c
  1828  010294  6AF7               	clrf	tblptrh,c
  1829  010296  0EFE               	movlw	high _CRCTable
  1830  010298  22F7               	addwfc	tblptrh,f,c
  1831  01029A                     	if	0	;There are less than 3 active tblptr bytes
  1832  01029A                     	endif
  1833  01029A  0008               	tblrd		*
  1834  01029C  0061 F3D4  F51B    	movff	tablat,SD_SendCommand@u8Checksum
  1835  0102A2                     
  1836                           ;sd.c: 134:     u8ByteToSend = u8Arg1_;
  1837  0102A2  C517  F51A         	movff	SD_SendCommand@u8Arg1_,SD_SendCommand@u8ByteToSend
  1838  0102A6                     
  1839                           ;sd.c: 135:     SPI_Write(u8ByteToSend);
  1840  0102A6  501A               	movf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1841  0102A8  ECE8  F082         	call	_SPI_Write
  1842  0102AC                     
  1843                           ;sd.c: 136:     { u8Checksum = (u8)(u8Checksum << 1); u8Checksum = u8Checksum ^ u8ByteTo
      +                          Send; u8Checksum = CRCTable[u8Checksum]; };
  1844  0102AC  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1845  0102AE  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1846  0102B0  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1847  0102B2  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1848  0102B4  181A               	xorwf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1849  0102B6  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1850  0102B8  0EFF               	movlw	low _CRCTable
  1851  0102BA  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1852  0102BC  6EF6               	movwf	tblptrl,c
  1853  0102BE  6AF7               	clrf	tblptrh,c
  1854  0102C0  0EFE               	movlw	high _CRCTable
  1855  0102C2  22F7               	addwfc	tblptrh,f,c
  1856  0102C4                     	if	0	;There are less than 3 active tblptr bytes
  1857  0102C4                     	endif
  1858  0102C4  0008               	tblrd		*
  1859  0102C6  0061 F3D4  F51B    	movff	tablat,SD_SendCommand@u8Checksum
  1860  0102CC                     
  1861                           ;sd.c: 138:     u8ByteToSend = u8Arg0_;
  1862  0102CC  C518  F51A         	movff	SD_SendCommand@u8Arg0_,SD_SendCommand@u8ByteToSend
  1863  0102D0                     
  1864                           ;sd.c: 139:     SPI_Write(u8ByteToSend);
  1865  0102D0  501A               	movf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1866  0102D2  ECE8  F082         	call	_SPI_Write
  1867  0102D6                     
  1868                           ;sd.c: 140:     { u8Checksum = (u8)(u8Checksum << 1); u8Checksum = u8Checksum ^ u8ByteTo
      +                          Send; u8Checksum = CRCTable[u8Checksum]; };
  1869  0102D6  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1870  0102D8  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1871  0102DA  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1872  0102DC  501B               	movf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1873  0102DE  181A               	xorwf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1874  0102E0  6E1B               	movwf	SD_SendCommand@u8Checksum^(0+1280),c
  1875  0102E2  0EFF               	movlw	low _CRCTable
  1876  0102E4  241B               	addwf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1877  0102E6  6EF6               	movwf	tblptrl,c
  1878  0102E8  6AF7               	clrf	tblptrh,c
  1879  0102EA  0EFE               	movlw	high _CRCTable
  1880  0102EC  22F7               	addwfc	tblptrh,f,c
  1881  0102EE                     	if	0	;There are less than 3 active tblptr bytes
  1882  0102EE                     	endif
  1883  0102EE  0008               	tblrd		*
  1884  0102F0  0061 F3D4  F51B    	movff	tablat,SD_SendCommand@u8Checksum
  1885  0102F6                     
  1886                           ;sd.c: 143:     u8ByteToSend = (u8)(u8Checksum << 1) | 0x01;
  1887  0102F6  80D8               	bsf	status,0,c
  1888  0102F8  341B               	rlcf	SD_SendCommand@u8Checksum^(0+1280),w,c
  1889  0102FA  6E1A               	movwf	SD_SendCommand@u8ByteToSend^(0+1280),c
  1890  0102FC                     
  1891                           ;sd.c: 144:     SPI_Write(u8ByteToSend);
  1892  0102FC  501A               	movf	SD_SendCommand@u8ByteToSend^(0+1280),w,c
  1893  0102FE  ECE8  F082         	call	_SPI_Write
  1894  010302  0012               	return		;funcret
  1895  010304                     __end_of_SD_SendCommand:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _SPI_Write *****************
  1899 ;; Defined at:
  1900 ;;		line 60 in file "spi.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  u8DataByte_     1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  u8DataByte_     1    1[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    2
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_SD_Init
  1925 ;;		_SD_SendCommand
  1926 ;;		_SD_WriteBlock
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text9
  1931  0105D0                     __ptext9:
  1932                           	callstack 0
  1933  0105D0                     _SPI_Write:
  1934                           	callstack 123
  1935                           
  1936                           ;incstack = 0
  1937                           ;SPI_Write@u8DataByte_ stored from wreg
  1938  0105D0  6E14               	movwf	SPI_Write@u8DataByte_^(0+1280),c
  1939  0105D2                     
  1940                           ;spi.c: 60: void SPI_Write(u8 u8DataByte_);spi.c: 61: {;spi.c: 63:   SPI1TXB = u8DataByt
      +                          e_;
  1941  0105D2  0061  F450  F081   	movff	SPI_Write@u8DataByte_,129	;volatile
  1942  0105D8                     
  1943                           ;spi.c: 64:   __nop();
  1944  0105D8  F000               	nop	
  1945  0105DA                     
  1946                           ;spi.c: 65:   __nop();
  1947  0105DA  F000               	nop	
  1948  0105DC                     l313:
  1949  0105DC  0100               	movlb	0	; () banked
  1950  0105DE  BF86               	btfsc	134,7,b	;volatile
  1951  0105E0  EFF4  F082         	goto	u261
  1952  0105E4  EFF6  F082         	goto	u260
  1953  0105E8                     u261:
  1954  0105E8  EFEE  F082         	goto	l313
  1955  0105EC                     u260:
  1956  0105EC                     
  1957                           ; BSR set to: 0
  1958  0105EC  5180               	movf	128,w,b	;volatile
  1959  0105EE                     
  1960                           ; BSR set to: 0
  1961  0105EE  0012               	return		;funcret
  1962  0105F0                     __end_of_SPI_Write:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _SD_Read8bitResponse *****************
  1966 ;; Defined at:
  1967 ;;		line 151 in file "sd.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  u8ReadMessag    1    1[COMRAM] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    3
  1988 ;; This function calls:
  1989 ;;		_SPI_Read
  1990 ;; This function is called by:
  1991 ;;		_SD_Init
  1992 ;;		_SD_ReadBlock
  1993 ;;		_SD_WriteBlock
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text10
  1998  0105F0                     __ptext10:
  1999                           	callstack 0
  2000  0105F0                     _SD_Read8bitResponse:
  2001                           	callstack 123
  2002  0105F0                     l1416:
  2003                           
  2004                           ;sd.c: 158:     {;sd.c: 159:       u8ReadMessage = SPI_Read();
  2005  0105F0  EC34  F083         	call	_SPI_Read	;wreg free
  2006  0105F4  6E14               	movwf	SD_Read8bitResponse@u8ReadMessage^(0+1280),c
  2007  0105F6                     
  2008                           ;sd.c: 160:     }
  2009  0105F6  2814               	incf	SD_Read8bitResponse@u8ReadMessage^(0+1280),w,c
  2010  0105F8  B4D8               	btfsc	status,2,c
  2011  0105FA  EF01  F083         	goto	u281
  2012  0105FE  EF03  F083         	goto	u280
  2013  010602                     u281:
  2014  010602  EFF8  F082         	goto	l1416
  2015  010606                     u280:
  2016  010606                     
  2017                           ;sd.c: 164:     G_u8SDResp8 = u8ReadMessage;
  2018  010606  C514  F52A         	movff	SD_Read8bitResponse@u8ReadMessage,_G_u8SDResp8	;volatile
  2019  01060A                     
  2020                           ;sd.c: 167:     SPI_Read();
  2021  01060A  EC34  F083         	call	_SPI_Read	;wreg free
  2022  01060E  0012               	return		;funcret
  2023  010610                     __end_of_SD_Read8bitResponse:
  2024                           	callstack 0
  2025                           
  2026 ;; *************** function _SD_Read40bitResponse *****************
  2027 ;; Defined at:
  2028 ;;		line 190 in file "sd.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  u8ReadMessag    1    1[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2046 ;;Total ram usage:        1 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    3
  2049 ;; This function calls:
  2050 ;;		_SPI_Read
  2051 ;; This function is called by:
  2052 ;;		_SD_Init
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text11
  2057  01050C                     __ptext11:
  2058                           	callstack 0
  2059  01050C                     _SD_Read40bitResponse:
  2060                           	callstack 123
  2061  01050C                     l1436:
  2062                           
  2063                           ;sd.c: 197:     {;sd.c: 198:       u8ReadMessage = SPI_Read();
  2064  01050C  EC34  F083         	call	_SPI_Read	;wreg free
  2065  010510  6E14               	movwf	SD_Read40bitResponse@u8ReadMessage^(0+1280),c
  2066  010512                     
  2067                           ;sd.c: 199:     }
  2068  010512  2814               	incf	SD_Read40bitResponse@u8ReadMessage^(0+1280),w,c
  2069  010514  B4D8               	btfsc	status,2,c
  2070  010516  EF8F  F082         	goto	u301
  2071  01051A  EF91  F082         	goto	u300
  2072  01051E                     u301:
  2073  01051E  EF86  F082         	goto	l1436
  2074  010522                     u300:
  2075  010522                     
  2076                           ;sd.c: 203:     G_au8SDResp40[0] = u8ReadMessage;
  2077  010522  C514  F525         	movff	SD_Read40bitResponse@u8ReadMessage,_G_au8SDResp40
  2078  010526                     
  2079                           ;sd.c: 204:     G_au8SDResp40[1] = SPI_Read();
  2080  010526  EC34  F083         	call	_SPI_Read	;wreg free
  2081  01052A  6E26               	movwf	(_G_au8SDResp40+1)^(0+1280),c
  2082                           
  2083                           ;sd.c: 205:     G_au8SDResp40[2] = SPI_Read();
  2084  01052C  EC34  F083         	call	_SPI_Read	;wreg free
  2085  010530  6E27               	movwf	(_G_au8SDResp40+2)^(0+1280),c
  2086                           
  2087                           ;sd.c: 206:     G_au8SDResp40[3] = SPI_Read();
  2088  010532  EC34  F083         	call	_SPI_Read	;wreg free
  2089  010536  6E28               	movwf	(_G_au8SDResp40+3)^(0+1280),c
  2090                           
  2091                           ;sd.c: 207:     G_au8SDResp40[4] = SPI_Read();
  2092  010538  EC34  F083         	call	_SPI_Read	;wreg free
  2093  01053C  6E29               	movwf	(_G_au8SDResp40+4)^(0+1280),c
  2094                           
  2095                           ;sd.c: 210:     SPI_Read();
  2096  01053E  EC34  F083         	call	_SPI_Read	;wreg free
  2097  010542  0012               	return		;funcret
  2098  010544                     __end_of_SD_Read40bitResponse:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _SPI_Read *****************
  2102 ;; Defined at:
  2103 ;;		line 75 in file "spi.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      unsigned char 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    2
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_SD_Read8bitResponse
  2128 ;;		_SD_Read40bitResponse
  2129 ;;		_SD_ReadBlock
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text12
  2134  010668                     __ptext12:
  2135                           	callstack 0
  2136  010668                     _SPI_Read:
  2137                           	callstack 124
  2138  010668                     
  2139                           ;spi.c: 78:   SPI1TXB = 0xFF;
  2140  010668  0100               	movlb	0	; () banked
  2141  01066A  6981               	setf	129,b	;volatile
  2142                           
  2143                           ;spi.c: 79:   __nop();
  2144  01066C  F000               	nop	
  2145                           
  2146                           ;spi.c: 80:   __nop();
  2147  01066E  F000               	nop	
  2148  010670                     l319:
  2149  010670  0100               	movlb	0	; () banked
  2150  010672  BF86               	btfsc	134,7,b	;volatile
  2151  010674  EF3E  F083         	goto	u271
  2152  010678  EF40  F083         	goto	u270
  2153  01067C                     u271:
  2154  01067C  EF38  F083         	goto	l319
  2155  010680                     u270:
  2156  010680                     
  2157                           ; BSR set to: 0
  2158                           ;spi.c: 83:   return SPI1RXB;
  2159  010680  5180               	movf	128,w,b	;volatile
  2160  010682                     
  2161                           ; BSR set to: 0
  2162  010682  0012               	return		;funcret
  2163  010684                     __end_of_SPI_Read:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _SD_Check8bitResponse *****************
  2167 ;; Defined at:
  2168 ;;		line 175 in file "sd.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  u8Byte_         1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  u8Byte_         1    1[COMRAM] unsigned char 
  2173 ;;  bMatch          1    2[COMRAM] _Bool 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      _Bool 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    2
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_SD_Init
  2194 ;;		_SD_ReadBlock
  2195 ;;		_SD_WriteBlock
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text13
  2200  010610                     __ptext13:
  2201                           	callstack 0
  2202  010610                     _SD_Check8bitResponse:
  2203                           	callstack 124
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;incstack = 0
  2207                           ;SD_Check8bitResponse@u8Byte_ stored from wreg
  2208  010610  6E14               	movwf	SD_Check8bitResponse@u8Byte_^(0+1280),c
  2209  010612                     
  2210                           ;sd.c: 175: _Bool SD_Check8bitResponse(u8 u8Byte_);sd.c: 176: {;sd.c: 177:     _Bool bMa
      +                          tch = 1;
  2211  010612  0E01               	movlw	1
  2212  010614  6E15               	movwf	SD_Check8bitResponse@bMatch^(0+1280),c
  2213  010616                     
  2214                           ;sd.c: 179:     if (u8Byte_ != G_u8SDResp8)
  2215  010616  502A               	movf	_G_u8SDResp8^(0+1280),w,c	;volatile
  2216  010618  1814               	xorwf	SD_Check8bitResponse@u8Byte_^(0+1280),w,c
  2217  01061A  B4D8               	btfsc	status,2,c
  2218  01061C  EF12  F083         	goto	u291
  2219  010620  EF14  F083         	goto	u290
  2220  010624                     u291:
  2221  010624  EF16  F083         	goto	l1430
  2222  010628                     u290:
  2223  010628                     
  2224                           ;sd.c: 180:     {;sd.c: 181:       bMatch = 0;
  2225  010628  0E00               	movlw	0
  2226  01062A  6E15               	movwf	SD_Check8bitResponse@bMatch^(0+1280),c
  2227  01062C                     l1430:
  2228                           
  2229                           ;sd.c: 184:     return bMatch;
  2230  01062C  5015               	movf	SD_Check8bitResponse@bMatch^(0+1280),w,c
  2231  01062E  0012               	return		;funcret
  2232  010630                     __end_of_SD_Check8bitResponse:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _SD_Check40bitResponse *****************
  2236 ;; Defined at:
  2237 ;;		line 219 in file "sd.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  u8Byte4_        1    wreg     unsigned char 
  2240 ;;  u8Byte3_        1    1[COMRAM] unsigned char 
  2241 ;;  u8Byte2_        1    2[COMRAM] unsigned char 
  2242 ;;  u8Byte1_        1    3[COMRAM] unsigned char 
  2243 ;;  u8Byte0_        1    4[COMRAM] unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  u8Byte4_        1    5[COMRAM] unsigned char 
  2246 ;;  bMatch          1    6[COMRAM] _Bool 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      _Bool 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2260 ;;Total ram usage:        6 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    2
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_SD_Init
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text14
  2271  01044C                     __ptext14:
  2272                           	callstack 0
  2273  01044C                     _SD_Check40bitResponse:
  2274                           	callstack 124
  2275                           
  2276                           ;incstack = 0
  2277                           ;SD_Check40bitResponse@u8Byte4_ stored from wreg
  2278  01044C  6E18               	movwf	SD_Check40bitResponse@u8Byte4_^(0+1280),c
  2279  01044E                     
  2280                           ;sd.c: 219: _Bool SD_Check40bitResponse(u8 u8Byte4_, u8 u8Byte3_, u8 u8Byte2_, u8 u8Byte
      +                          1_, u8 u8Byte0_);sd.c: 220: {;sd.c: 221:     _Bool bMatch = 1;
  2281  01044E  0E01               	movlw	1
  2282  010450  6E19               	movwf	SD_Check40bitResponse@bMatch^(0+1280),c
  2283  010452                     
  2284                           ;sd.c: 222:     if (u8Byte4_ != G_au8SDResp40[0]) bMatch = 0;
  2285  010452  5018               	movf	SD_Check40bitResponse@u8Byte4_^(0+1280),w,c
  2286  010454  1825               	xorwf	_G_au8SDResp40^(0+1280),w,c
  2287  010456  B4D8               	btfsc	status,2,c
  2288  010458  EF30  F082         	goto	u311
  2289  01045C  EF32  F082         	goto	u310
  2290  010460                     u311:
  2291  010460  EF34  F082         	goto	l1450
  2292  010464                     u310:
  2293  010464  0E00               	movlw	0
  2294  010466  6E19               	movwf	SD_Check40bitResponse@bMatch^(0+1280),c
  2295  010468                     l1450:
  2296                           
  2297                           ;sd.c: 223:     if (u8Byte3_ != G_au8SDResp40[1]) bMatch = 0;
  2298  010468  5014               	movf	SD_Check40bitResponse@u8Byte3_^(0+1280),w,c
  2299  01046A  1826               	xorwf	(_G_au8SDResp40+1)^(0+1280),w,c
  2300  01046C  B4D8               	btfsc	status,2,c
  2301  01046E  EF3B  F082         	goto	u321
  2302  010472  EF3D  F082         	goto	u320
  2303  010476                     u321:
  2304  010476  EF3F  F082         	goto	l1454
  2305  01047A                     u320:
  2306  01047A  0E00               	movlw	0
  2307  01047C  6E19               	movwf	SD_Check40bitResponse@bMatch^(0+1280),c
  2308  01047E                     l1454:
  2309                           
  2310                           ;sd.c: 224:     if (u8Byte2_ != G_au8SDResp40[2]) bMatch = 0;
  2311  01047E  5015               	movf	SD_Check40bitResponse@u8Byte2_^(0+1280),w,c
  2312  010480  1827               	xorwf	(_G_au8SDResp40+2)^(0+1280),w,c
  2313  010482  B4D8               	btfsc	status,2,c
  2314  010484  EF46  F082         	goto	u331
  2315  010488  EF48  F082         	goto	u330
  2316  01048C                     u331:
  2317  01048C  EF4A  F082         	goto	l1458
  2318  010490                     u330:
  2319  010490  0E00               	movlw	0
  2320  010492  6E19               	movwf	SD_Check40bitResponse@bMatch^(0+1280),c
  2321  010494                     l1458:
  2322                           
  2323                           ;sd.c: 225:     if (u8Byte1_ != G_au8SDResp40[3]) bMatch = 0;
  2324  010494  5016               	movf	SD_Check40bitResponse@u8Byte1_^(0+1280),w,c
  2325  010496  1828               	xorwf	(_G_au8SDResp40+3)^(0+1280),w,c
  2326  010498  B4D8               	btfsc	status,2,c
  2327  01049A  EF51  F082         	goto	u341
  2328  01049E  EF53  F082         	goto	u340
  2329  0104A2                     u341:
  2330  0104A2  EF55  F082         	goto	l1462
  2331  0104A6                     u340:
  2332  0104A6  0E00               	movlw	0
  2333  0104A8  6E19               	movwf	SD_Check40bitResponse@bMatch^(0+1280),c
  2334  0104AA                     l1462:
  2335                           
  2336                           ;sd.c: 226:     if (u8Byte0_ != G_au8SDResp40[4]) bMatch = 0;
  2337  0104AA  5017               	movf	SD_Check40bitResponse@u8Byte0_^(0+1280),w,c
  2338  0104AC  1829               	xorwf	(_G_au8SDResp40+4)^(0+1280),w,c
  2339  0104AE  B4D8               	btfsc	status,2,c
  2340  0104B0  EF5C  F082         	goto	u351
  2341  0104B4  EF5E  F082         	goto	u350
  2342  0104B8                     u351:
  2343  0104B8  EF60  F082         	goto	l266
  2344  0104BC                     u350:
  2345  0104BC  0E00               	movlw	0
  2346  0104BE  6E19               	movwf	SD_Check40bitResponse@bMatch^(0+1280),c
  2347  0104C0                     l266:
  2348                           
  2349                           ;sd.c: 228:     return bMatch;
  2350  0104C0  5019               	movf	SD_Check40bitResponse@bMatch^(0+1280),w,c
  2351  0104C2  0012               	return		;funcret
  2352  0104C4                     __end_of_SD_Check40bitResponse:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _InterruptSetup *****************
  2356 ;; Defined at:
  2357 ;;		line 74 in file "interrupts.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		None
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    2
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text15
  2386  0106C2                     __ptext15:
  2387                           	callstack 0
  2388  0106C2                     _InterruptSetup:
  2389                           	callstack 125
  2390  0106C2                     
  2391                           ;interrupts.c: 77:   INTCON0bits.IPEN = 1;
  2392  0106C2  8AD6               	bsf	214,5,c	;volatile
  2393                           
  2394                           ;interrupts.c: 80:   INTCON0bits.GIEH = 1;
  2395  0106C4  8ED6               	bsf	214,7,c	;volatile
  2396                           
  2397                           ;interrupts.c: 81:   INTCON0bits.GIEL = 1;
  2398  0106C6  8CD6               	bsf	214,6,c	;volatile
  2399  0106C8  0012               	return		;funcret
  2400  0106CA                     __end_of_InterruptSetup:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _GpioSetup *****************
  2404 ;; Defined at:
  2405 ;;		line 90 in file "encm369_pic18.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    2
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text16
  2434  010578                     __ptext16:
  2435                           	callstack 0
  2436  010578                     _GpioSetup:
  2437                           	callstack 125
  2438  010578                     
  2439                           ;encm369_pic18.c: 93:   ANSELA = 0x00;
  2440  010578  0E00               	movlw	0
  2441  01057A  0104               	movlb	4	; () banked
  2442  01057C  6F00               	movwf	0,b	;volatile
  2443                           
  2444                           ;encm369_pic18.c: 94:   TRISA = 0x00;
  2445  01057E  0E00               	movlw	0
  2446  010580  6EC6               	movwf	198,c	;volatile
  2447                           
  2448                           ;encm369_pic18.c: 97:   ANSELC = 0x00;
  2449  010582  0E00               	movlw	0
  2450  010584  6F10               	movwf	16,b	;volatile
  2451                           
  2452                           ;encm369_pic18.c: 98:   TRISC = 0x6B;
  2453  010586  0E6B               	movlw	107
  2454  010588  6EC8               	movwf	200,c	;volatile
  2455                           
  2456                           ;encm369_pic18.c: 99:   LATC = 0x94;
  2457  01058A  0E94               	movlw	148
  2458  01058C  6EC0               	movwf	192,c	;volatile
  2459                           
  2460                           ;encm369_pic18.c: 101:   RC2PPS = 0x31;
  2461  01058E  0E31               	movlw	49
  2462  010590  0102               	movlb	2	; () banked
  2463  010592  6F13               	movwf	19,b	;volatile
  2464                           
  2465                           ;encm369_pic18.c: 102:   RC4PPS = 0x32;
  2466  010594  0E32               	movlw	50
  2467  010596  6F15               	movwf	21,b	;volatile
  2468                           
  2469                           ;encm369_pic18.c: 104:   SPI1SCKPPS = 0x12;
  2470  010598  0E12               	movlw	18
  2471  01059A  6F6A               	movwf	106,b	;volatile
  2472                           
  2473                           ;encm369_pic18.c: 105:   SPI1SDIPPS = 0x13;
  2474  01059C  0E13               	movlw	19
  2475  01059E  6F6B               	movwf	107,b	;volatile
  2476                           
  2477                           ;encm369_pic18.c: 108:   DAC1CON = 0xA0;
  2478  0105A0  0EA0               	movlw	160
  2479  0105A2  0100               	movlb	0	; () banked
  2480  0105A4  6F7F               	movwf	127,b	;volatile
  2481                           
  2482                           ;encm369_pic18.c: 109:   DAC1DATL = 0;
  2483  0105A6  0E00               	movlw	0
  2484  0105A8  6F7D               	movwf	125,b	;volatile
  2485  0105AA                     
  2486                           ; BSR set to: 0
  2487  0105AA  0012               	return		;funcret
  2488  0105AC                     __end_of_GpioSetup:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _ClockSetup *****************
  2492 ;; Defined at:
  2493 ;;		line 71 in file "encm369_pic18.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		None
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    2
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text17
  2522  0106D6                     __ptext17:
  2523                           	callstack 0
  2524  0106D6                     _ClockSetup:
  2525                           	callstack 125
  2526  0106D6  0012               	return		;funcret
  2527  0106D8                     __end_of_ClockSetup:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _DEFAULT_ISR *****************
  2531 ;; Defined at:
  2532 ;;		line 93 in file "interrupts.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2550 ;;Total ram usage:        1 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    1
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		Interrupt level 1
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text18
  2561  010684                     __ptext18:
  2562                           	callstack 0
  2563  010684                     _DEFAULT_ISR:
  2564                           	callstack 123
  2565                           
  2566                           ;incstack = 0
  2567  010684  0061 F360  F513    	movff	status,??_DEFAULT_ISR
  2568  01068A                     
  2569                           ;interrupts.c: 99:   static u32 u32UnhandledCounter = 0;;interrupts.c: 101:   u32Unhandl
      +                          edCounter++;
  2570  01068A  0E01               	movlw	1
  2571  01068C  2601               	addwf	DEFAULT_ISR@u32UnhandledCounter^(0+1280),f,c
  2572  01068E  0E00               	movlw	0
  2573  010690  2202               	addwfc	(DEFAULT_ISR@u32UnhandledCounter+1)^(0+1280),f,c
  2574  010692  2203               	addwfc	(DEFAULT_ISR@u32UnhandledCounter+2)^(0+1280),f,c
  2575  010694  2204               	addwfc	(DEFAULT_ISR@u32UnhandledCounter+3)^(0+1280),f,c
  2576  010696  0061  F44C  F4D8   	movff	??_DEFAULT_ISR,status
  2577  01069C  0011               	retfie		f
  2578  01069E                     __end_of_DEFAULT_ISR:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _SW_ISR *****************
  2582 ;; Defined at:
  2583 ;;		line 86 in file "interrupts.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		None
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		Interrupt level 2
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text19
  2611  0106D0                     __ptext19:
  2612                           	callstack 0
  2613  0106D0                     _SW_ISR:
  2614                           	callstack 123
  2615  0106D0                     
  2616                           ;interrupts.c: 88:   PIR0bits.SWIF = 0;
  2617  0106D0  90AE               	bcf	174,0,c	;volatile
  2618  0106D2  0011               	retfie		f
  2619  0106D4                     __end_of_SW_ISR:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function _TMR1_ISR *****************
  2623 ;; Defined at:
  2624 ;;		line 112 in file "interrupts.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		None
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		Interrupt level 2
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text20
  2652  0105AC                     __ptext20:
  2653                           	callstack 0
  2654  0105AC                     _TMR1_ISR:
  2655                           	callstack 123
  2656  0105AC                     
  2657                           ;interrupts.c: 114:   static u8 u8Index = 0;;interrupts.c: 117:   TMR1H = G_u8UserAppTim
      +                          ePeriodHi;
  2658  0105AC  0061  F440  F31D   	movff	_G_u8UserAppTimePeriodHi,797	;volatile
  2659                           
  2660                           ;interrupts.c: 118:   TMR1L = G_u8UserAppTimePeriodLo;
  2661  0105B2  0061  F43C  F31C   	movff	_G_u8UserAppTimePeriodLo,796	;volatile
  2662                           
  2663                           ;interrupts.c: 133:   PIR3bits.TMR1IF = 0;
  2664  0105B8  98B1               	bcf	177,4,c	;volatile
  2665                           
  2666                           ;interrupts.c: 136:   if( !(G_u8UserAppFlags & (u8)0x01) )
  2667  0105BA  B011               	btfsc	_G_u8UserAppFlags^(0+1280),0,c	;volatile
  2668  0105BC  EFE2  F082         	goto	i2u23_41
  2669  0105C0  EFE4  F082         	goto	i2u23_40
  2670  0105C4                     i2u23_41:
  2671  0105C4  EFE7  F082         	goto	i2l196
  2672  0105C8                     i2u23_40:
  2673  0105C8                     
  2674                           ;interrupts.c: 137:   {;interrupts.c: 138:     PIE3bits.TMR1IE = 0;
  2675  0105C8  98A1               	bcf	161,4,c	;volatile
  2676                           
  2677                           ;interrupts.c: 139:     T1CONbits.ON = 0;
  2678  0105CA  0103               	movlb	3	; () banked
  2679  0105CC  911E               	bcf	30,0,b	;volatile
  2680  0105CE                     i2l196:
  2681  0105CE  0011               	retfie		f
  2682  0105D0                     __end_of_TMR1_ISR:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function _TMR2_ISR *****************
  2686 ;; Defined at:
  2687 ;;		line 146 in file "interrupts.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		Interrupt level 2
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text21
  2715  0106B0                     __ptext21:
  2716                           	callstack 0
  2717  0106B0                     _TMR2_ISR:
  2718                           	callstack 123
  2719  0106B0                     
  2720                           ;interrupts.c: 149:   PIR3bits.TMR2IF = 0;
  2721  0106B0  96B1               	bcf	177,3,c	;volatile
  2722  0106B2                     
  2723                           ;interrupts.c: 150:   G_u8SystemFlags &= ~(u8)0x40;
  2724  0106B2  9C12               	bcf	_G_u8SystemFlags^(0+1280),6,c	;volatile
  2725  0106B4                     
  2726                           ;interrupts.c: 153:   G_u32SystemTime1ms++;
  2727  0106B4  0E01               	movlw	1
  2728  0106B6  2609               	addwf	_G_u32SystemTime1ms^(0+1280),f,c	;volatile
  2729  0106B8  0E00               	movlw	0
  2730  0106BA  220A               	addwfc	(_G_u32SystemTime1ms+1)^(0+1280),f,c	;volatile
  2731  0106BC  220B               	addwfc	(_G_u32SystemTime1ms+2)^(0+1280),f,c	;volatile
  2732  0106BE  220C               	addwfc	(_G_u32SystemTime1ms+3)^(0+1280),f,c	;volatile
  2733  0106C0  0011               	retfie		f
  2734  0106C2                     __end_of_TMR2_ISR:
  2735                           	callstack 0
  2736                           
  2737                           ;
  2738                           ; Interrupt Vector Table @ 0x8
  2739                           ;
  2740                           
  2741                           	psect	ivt0x8
  2742  000008                     __pivt0x8:
  2743                           	callstack 0
  2744  000008                     ivt0x8_base:
  2745                           	callstack 0
  2746                           
  2747                           ; Vector 0 : SWINT
  2748  000008  41B4               	dw	_SW_ISR shr (0+2)
  2749                           
  2750                           ; Vector 1 : HLVD
  2751  00000A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2752                           
  2753                           ; Vector 2 : OSF
  2754  00000C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2755                           
  2756                           ; Vector 3 : CSW
  2757  00000E  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2758                           
  2759                           ; Vector 4 : Undefined
  2760  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2761                           
  2762                           ; Vector 5 : CLC1
  2763  000012  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2764                           
  2765                           ; Vector 6 : Undefined
  2766  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2767                           
  2768                           ; Vector 7 : IOC
  2769  000016  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2770                           
  2771                           ; Vector 8 : INT0
  2772  000018  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2773                           
  2774                           ; Vector 9 : ZCD
  2775  00001A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2776                           
  2777                           ; Vector 10 : AD
  2778  00001C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2779                           
  2780                           ; Vector 11 : ACT
  2781  00001E  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2782                           
  2783                           ; Vector 12 : CMP1
  2784  000020  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2785                           
  2786                           ; Vector 13 : SMT1
  2787  000022  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2788                           
  2789                           ; Vector 14 : SMT1PRA
  2790  000024  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2791                           
  2792                           ; Vector 15 : SMT1PRW
  2793  000026  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2794                           
  2795                           ; Vector 16 : ADT
  2796  000028  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2797                           
  2798                           ; Vector 17 : Undefined
  2799  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2800                           
  2801                           ; Vector 18 : Undefined
  2802  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2803                           
  2804                           ; Vector 19 : Undefined
  2805  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2806                           
  2807                           ; Vector 20 : DMA1SCNT
  2808  000030  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2809                           
  2810                           ; Vector 21 : DMA1DCNT
  2811  000032  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2812                           
  2813                           ; Vector 22 : DMA1OR
  2814  000034  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2815                           
  2816                           ; Vector 23 : DMA1A
  2817  000036  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2818                           
  2819                           ; Vector 24 : SPI1RX
  2820  000038  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2821                           
  2822                           ; Vector 25 : SPI1TX
  2823  00003A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2824                           
  2825                           ; Vector 26 : SPI1
  2826  00003C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2827                           
  2828                           ; Vector 27 : TMR2
  2829  00003E  41AC               	dw	_TMR2_ISR shr (0+2)
  2830                           
  2831                           ; Vector 28 : TMR1
  2832  000040  416B               	dw	_TMR1_ISR shr (0+2)
  2833                           
  2834                           ; Vector 29 : TMR1G
  2835  000042  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2836                           
  2837                           ; Vector 30 : CCP1
  2838  000044  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2839                           
  2840                           ; Vector 31 : TMR0
  2841  000046  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2842                           
  2843                           ; Vector 32 : U1RX
  2844  000048  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2845                           
  2846                           ; Vector 33 : U1TX
  2847  00004A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2848                           
  2849                           ; Vector 34 : U1E
  2850  00004C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2851                           
  2852                           ; Vector 35 : U1
  2853  00004E  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2854                           
  2855                           ; Vector 36 : Undefined
  2856  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2857                           
  2858                           ; Vector 37 : Undefined
  2859  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2860                           
  2861                           ; Vector 38 : PWM1PR
  2862  000054  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2863                           
  2864                           ; Vector 39 : PWM1
  2865  000056  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2866                           
  2867                           ; Vector 40 : SPI2RX
  2868  000058  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2869                           
  2870                           ; Vector 41 : SPI2TX
  2871  00005A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2872                           
  2873                           ; Vector 42 : SPI2
  2874  00005C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2875                           
  2876                           ; Vector 43 : Undefined
  2877  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2878                           
  2879                           ; Vector 44 : TMR3
  2880  000060  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2881                           
  2882                           ; Vector 45 : TMR3G
  2883  000062  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2884                           
  2885                           ; Vector 46 : PWM2PR
  2886  000064  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2887                           
  2888                           ; Vector 47 : PWM2
  2889  000066  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2890                           
  2891                           ; Vector 48 : INT1
  2892  000068  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2893                           
  2894                           ; Vector 49 : CLC2
  2895  00006A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2896                           
  2897                           ; Vector 50 : CWG1
  2898  00006C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2899                           
  2900                           ; Vector 51 : NCO1
  2901  00006E  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2902                           
  2903                           ; Vector 52 : DMA2SCNT
  2904  000070  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2905                           
  2906                           ; Vector 53 : DMA2DCNT
  2907  000072  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2908                           
  2909                           ; Vector 54 : DMA2OR
  2910  000074  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2911                           
  2912                           ; Vector 55 : DMA2A
  2913  000076  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2914                           
  2915                           ; Vector 56 : I2C1RX
  2916  000078  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2917                           
  2918                           ; Vector 57 : I2C1TX
  2919  00007A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2920                           
  2921                           ; Vector 58 : I2C1
  2922  00007C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2923                           
  2924                           ; Vector 59 : I2C1E
  2925  00007E  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2926                           
  2927                           ; Vector 60 : Undefined
  2928  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2929                           
  2930                           ; Vector 61 : CLC3
  2931  000082  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2932                           
  2933                           ; Vector 62 : PWM3PR
  2934  000084  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2935                           
  2936                           ; Vector 63 : PWM3
  2937  000086  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2938                           
  2939                           ; Vector 64 : U2RX
  2940  000088  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2941                           
  2942                           ; Vector 65 : U2TX
  2943  00008A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2944                           
  2945                           ; Vector 66 : U2E
  2946  00008C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2947                           
  2948                           ; Vector 67 : U2
  2949  00008E  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2950                           
  2951                           ; Vector 68 : TMR5
  2952  000090  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2953                           
  2954                           ; Vector 69 : TMR5G
  2955  000092  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2956                           
  2957                           ; Vector 70 : CCP2
  2958  000094  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2959                           
  2960                           ; Vector 71 : SCAN
  2961  000096  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2962                           
  2963                           ; Vector 72 : U3RX
  2964  000098  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2965                           
  2966                           ; Vector 73 : U3TX
  2967  00009A  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2968                           
  2969                           ; Vector 74 : U3E
  2970  00009C  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2971                           
  2972                           ; Vector 75 : U3
  2973  00009E  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2974                           
  2975                           ; Vector 76 : Undefined
  2976  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2977                           
  2978                           ; Vector 77 : CLC4
  2979  0000A2  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2980                           
  2981                           ; Vector 78 : Undefined
  2982  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2983                           
  2984                           ; Vector 79 : Undefined
  2985  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2986                           
  2987                           ; Vector 80 : INT2
  2988  0000A8  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2989                           
  2990                           ; Vector 81 : CLC5
  2991  0000AA  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2992                           
  2993                           ; Vector 82 : CWG2
  2994  0000AC  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2995                           
  2996                           ; Vector 83 : NCO2
  2997  0000AE  41A1               	dw	_DEFAULT_ISR shr (0+2)
  2998                           
  2999                           ; Vector 84 : DMA3SCNT
  3000  0000B0  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3001                           
  3002                           ; Vector 85 : DMA3DCNT
  3003  0000B2  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3004                           
  3005                           ; Vector 86 : DMA3OR
  3006  0000B4  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3007                           
  3008                           ; Vector 87 : DMA3A
  3009  0000B6  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3010                           
  3011                           ; Vector 88 : CCP3
  3012  0000B8  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3013                           
  3014                           ; Vector 89 : CLC6
  3015  0000BA  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3016                           
  3017                           ; Vector 90 : CWG3
  3018  0000BC  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3019                           
  3020                           ; Vector 91 : TMR4
  3021  0000BE  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3022                           
  3023                           ; Vector 92 : DMA4SCNT
  3024  0000C0  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3025                           
  3026                           ; Vector 93 : DMA4DCNT
  3027  0000C2  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3028                           
  3029                           ; Vector 94 : DMA4OR
  3030  0000C4  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3031                           
  3032                           ; Vector 95 : DMA4A
  3033  0000C6  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3034                           
  3035                           ; Vector 96 : U4RX
  3036  0000C8  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3037                           
  3038                           ; Vector 97 : U4TX
  3039  0000CA  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3040                           
  3041                           ; Vector 98 : U4E
  3042  0000CC  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3043                           
  3044                           ; Vector 99 : U4
  3045  0000CE  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3046                           
  3047                           ; Vector 100 : DMA5SCNT
  3048  0000D0  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3049                           
  3050                           ; Vector 101 : DMA5DCNT
  3051  0000D2  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3052                           
  3053                           ; Vector 102 : DMA5OR
  3054  0000D4  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3055                           
  3056                           ; Vector 103 : DMA5A
  3057  0000D6  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3058                           
  3059                           ; Vector 104 : U5RX
  3060  0000D8  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3061                           
  3062                           ; Vector 105 : U5TX
  3063  0000DA  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3064                           
  3065                           ; Vector 106 : U5E
  3066  0000DC  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3067                           
  3068                           ; Vector 107 : U5
  3069  0000DE  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3070                           
  3071                           ; Vector 108 : DMA6SCNT
  3072  0000E0  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3073                           
  3074                           ; Vector 109 : DMA6DCNT
  3075  0000E2  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3076                           
  3077                           ; Vector 110 : DMA6OR
  3078  0000E4  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3079                           
  3080                           ; Vector 111 : DMA6A
  3081  0000E6  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3082                           
  3083                           ; Vector 112 : Undefined
  3084  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3085                           
  3086                           ; Vector 113 : CLC7
  3087  0000EA  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3088                           
  3089                           ; Vector 114 : CMP2
  3090  0000EC  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3091                           
  3092                           ; Vector 115 : NCO3
  3093  0000EE  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3094                           
  3095                           ; Vector 116 : Undefined
  3096  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3097                           
  3098                           ; Vector 117 : Undefined
  3099  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3100                           
  3101                           ; Vector 118 : Undefined
  3102  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3103                           
  3104                           ; Vector 119 : Undefined
  3105  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3106                           
  3107                           ; Vector 120 : NVM
  3108  0000F8  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3109                           
  3110                           ; Vector 121 : CLC8
  3111  0000FA  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3112                           
  3113                           ; Vector 122 : CRC
  3114  0000FC  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3115                           
  3116                           ; Vector 123 : TMR6
  3117  0000FE  41A1               	dw	_DEFAULT_ISR shr (0+2)
  3118  000100                     ivt0x8_undefint:
  3119                           	callstack 0
  3120  000100  00FF               	reset	
  3121                           
  3122                           	psect	rparam
  3123  0000                     
  3124                           	psect	idloc
  3125                           
  3126                           ;Config register IDLOC0 @ 0x200000
  3127                           ;	unspecified, using default values
  3128  200000                     	org	2097152
  3129  200000  0FFF               	dw	4095
  3130                           
  3131                           ;Config register IDLOC1 @ 0x200002
  3132                           ;	unspecified, using default values
  3133  200002                     	org	2097154
  3134  200002  0FFF               	dw	4095
  3135                           
  3136                           ;Config register IDLOC2 @ 0x200004
  3137                           ;	unspecified, using default values
  3138  200004                     	org	2097156
  3139  200004  0FFF               	dw	4095
  3140                           
  3141                           ;Config register IDLOC3 @ 0x200006
  3142                           ;	unspecified, using default values
  3143  200006                     	org	2097158
  3144  200006  0FFF               	dw	4095
  3145                           
  3146                           ;Config register IDLOC4 @ 0x200008
  3147                           ;	unspecified, using default values
  3148  200008                     	org	2097160
  3149  200008  0FFF               	dw	4095
  3150                           
  3151                           ;Config register IDLOC5 @ 0x20000A
  3152                           ;	unspecified, using default values
  3153  20000A                     	org	2097162
  3154  20000A  0FFF               	dw	4095
  3155                           
  3156                           ;Config register IDLOC6 @ 0x20000C
  3157                           ;	unspecified, using default values
  3158  20000C                     	org	2097164
  3159  20000C  0FFF               	dw	4095
  3160                           
  3161                           ;Config register IDLOC7 @ 0x20000E
  3162                           ;	unspecified, using default values
  3163  20000E                     	org	2097166
  3164  20000E  0FFF               	dw	4095
  3165                           
  3166                           ;Config register IDLOC8 @ 0x200010
  3167                           ;	unspecified, using default values
  3168  200010                     	org	2097168
  3169  200010  0FFF               	dw	4095
  3170                           
  3171                           ;Config register IDLOC9 @ 0x200012
  3172                           ;	unspecified, using default values
  3173  200012                     	org	2097170
  3174  200012  0FFF               	dw	4095
  3175                           
  3176                           ;Config register IDLOC10 @ 0x200014
  3177                           ;	unspecified, using default values
  3178  200014                     	org	2097172
  3179  200014  0FFF               	dw	4095
  3180                           
  3181                           ;Config register IDLOC11 @ 0x200016
  3182                           ;	unspecified, using default values
  3183  200016                     	org	2097174
  3184  200016  0FFF               	dw	4095
  3185                           
  3186                           ;Config register IDLOC12 @ 0x200018
  3187                           ;	unspecified, using default values
  3188  200018                     	org	2097176
  3189  200018  0FFF               	dw	4095
  3190                           
  3191                           ;Config register IDLOC13 @ 0x20001A
  3192                           ;	unspecified, using default values
  3193  20001A                     	org	2097178
  3194  20001A  0FFF               	dw	4095
  3195                           
  3196                           ;Config register IDLOC14 @ 0x20001C
  3197                           ;	unspecified, using default values
  3198  20001C                     	org	2097180
  3199  20001C  0FFF               	dw	4095
  3200                           
  3201                           ;Config register IDLOC15 @ 0x20001E
  3202                           ;	unspecified, using default values
  3203  20001E                     	org	2097182
  3204  20001E  0FFF               	dw	4095
  3205                           
  3206                           	psect	config
  3207                           
  3208                           ;Config register CONFIG1 @ 0x300000
  3209                           ;	External Oscillator Selection
  3210                           ;	FEXTOSC = OFF, Oscillator not enabled
  3211                           ;	Reset Oscillator Selection
  3212                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3213  300000                     	org	3145728
  3214  300000  8C                 	db	140
  3215                           
  3216                           ;Config register CONFIG2 @ 0x300001
  3217                           ;	Clock out Enable bit
  3218                           ;	CLKOUTEN = ON, CLKOUT function is enabled
  3219                           ;	PRLOCKED One-Way Set Enable bit
  3220                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3221                           ;	Clock Switch Enable bit
  3222                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3223                           ;	Fail-Safe Clock Monitor Enable bit
  3224                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3225  300001                     	org	3145729
  3226  300001  FE                 	db	254
  3227                           
  3228                           ;Config register CONFIG3 @ 0x300002
  3229                           ;	MCLR Enable bit
  3230                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3231                           ;	Power-up timer selection bits
  3232                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3233                           ;	Multi-vector enable bit
  3234                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3235                           ;	IVTLOCK bit One-way set enable bit
  3236                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3237                           ;	Low Power BOR Enable bit
  3238                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3239                           ;	Brown-out Reset Enable bits
  3240                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3241  300002                     	org	3145730
  3242  300002  FF                 	db	255
  3243                           
  3244                           ;Config register CONFIG4 @ 0x300003
  3245                           ;	Brown-out Reset Voltage Selection bits
  3246                           ;	BORV = VBOR_2P85, Brown-out Reset Voltage (VBOR) set to 2.8V
  3247                           ;	ZCD Disable bit
  3248                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3249                           ;	PPSLOCK bit One-Way Set Enable bit
  3250                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3251                           ;	Stack Full/Underflow Reset Enable bit
  3252                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3253                           ;	Low Voltage Programming Enable bit
  3254                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3255                           ;	Extended Instruction Set Enable bit
  3256                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3257  300003                     	org	3145731
  3258  300003  FC                 	db	252
  3259                           
  3260                           ;Config register CONFIG5 @ 0x300004
  3261                           ;	WDT Period selection bits
  3262                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3263                           ;	WDT operating mode
  3264                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3265  300004                     	org	3145732
  3266  300004  9F                 	db	159
  3267                           
  3268                           ;Config register CONFIG6 @ 0x300005
  3269                           ;	WDT Window Select bits
  3270                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3271                           ;	WDT input clock selector
  3272                           ;	WDTCCS = SC, Software Control
  3273  300005                     	org	3145733
  3274  300005  FF                 	db	255
  3275                           
  3276                           ;Config register CONFIG7 @ 0x300006
  3277                           ;	Boot Block Size selection bits
  3278                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3279                           ;	Boot Block enable bit
  3280                           ;	BBEN = OFF, Boot block disabled
  3281                           ;	Storage Area Flash enable bit
  3282                           ;	SAFEN = OFF, SAF disabled
  3283                           ;	Background Debugger
  3284                           ;	DEBUG = OFF, Background Debugger disabled
  3285  300006                     	org	3145734
  3286  300006  FF                 	db	255
  3287                           
  3288                           ;Config register CONFIG8 @ 0x300007
  3289                           ;	Boot Block Write Protection bit
  3290                           ;	WRTB = OFF, Boot Block not Write protected
  3291                           ;	Configuration Register Write Protection bit
  3292                           ;	WRTC = OFF, Configuration registers not Write protected
  3293                           ;	Data EEPROM Write Protection bit
  3294                           ;	WRTD = OFF, Data EEPROM not Write protected
  3295                           ;	SAF Write protection bit
  3296                           ;	WRTSAF = OFF, SAF not Write Protected
  3297                           ;	Application Block write protection bit
  3298                           ;	WRTAPP = OFF, Application Block not write protected
  3299  300007                     	org	3145735
  3300  300007  FF                 	db	255
  3301                           
  3302                           ; Padding undefined space
  3303  300008                     	org	3145736
  3304  300008  FF                 	db	255
  3305                           
  3306                           ;Config register CONFIG10 @ 0x300009
  3307                           ;	PFM and Data EEPROM Code Protection bit
  3308                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3309  300009                     	org	3145737
  3310  300009  FF                 	db	255
  3311                           tosu	equ	0x4FF
  3312                           tosh	equ	0x4FE
  3313                           tosl	equ	0x4FD
  3314                           stkptr	equ	0x4FC
  3315                           pclatu	equ	0x4FB
  3316                           pclath	equ	0x4FA
  3317                           pcl	equ	0x4F9
  3318                           tblptru	equ	0x4F8
  3319                           tblptrh	equ	0x4F7
  3320                           tblptrl	equ	0x4F6
  3321                           tablat	equ	0x4F5
  3322                           prodh	equ	0x4F4
  3323                           prodl	equ	0x4F3
  3324                           indf0	equ	0x4EF
  3325                           postinc0	equ	0x4EE
  3326                           postdec0	equ	0x4ED
  3327                           preinc0	equ	0x4EC
  3328                           plusw0	equ	0x4EB
  3329                           fsr0h	equ	0x4EA
  3330                           fsr0l	equ	0x4E9
  3331                           wreg	equ	0x4E8
  3332                           indf1	equ	0x4E7
  3333                           postinc1	equ	0x4E6
  3334                           postdec1	equ	0x4E5
  3335                           preinc1	equ	0x4E4
  3336                           plusw1	equ	0x4E3
  3337                           fsr1h	equ	0x4E2
  3338                           fsr1l	equ	0x4E1
  3339                           bsr	equ	0x4E0
  3340                           indf2	equ	0x4DF
  3341                           postinc2	equ	0x4DE
  3342                           postdec2	equ	0x4DD
  3343                           preinc2	equ	0x4DC
  3344                           plusw2	equ	0x4DB
  3345                           fsr2h	equ	0x4DA
  3346                           fsr2l	equ	0x4D9
  3347                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    256
    Data        262
    BSS         1554
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      42
    BANK5           160      0       0
    BANK6           256      0     256
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0
    BANK37          256      0       0

Pointer List with Targets:

    SD_ReadBlock@pu8RxBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> G_au8SDReadBuffer1(BIGRAM[512]), G_au8SDReadBuffer0(BIGRAM[512]), 


Critical Paths under _main in COMRAM

    _main->_SD_ReadBlock
    _SD_ReadBlock->_SD_SendCommand
    _SD_Init->_SD_SendCommand
    _SD_SendCommand->_SPI_Write

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _SW_ISR in COMRAM

    None.

Critical Paths under _TMR1_ISR in COMRAM

    None.

Critical Paths under _TMR2_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _SW_ISR in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _TMR2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _SW_ISR in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _TMR2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _SW_ISR in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Critical Paths under _TMR2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _SW_ISR in BANK8

    None.

Critical Paths under _TMR1_ISR in BANK8

    None.

Critical Paths under _TMR2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _SW_ISR in BANK9

    None.

Critical Paths under _TMR1_ISR in BANK9

    None.

Critical Paths under _TMR2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _SW_ISR in BANK10

    None.

Critical Paths under _TMR1_ISR in BANK10

    None.

Critical Paths under _TMR2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _SW_ISR in BANK11

    None.

Critical Paths under _TMR1_ISR in BANK11

    None.

Critical Paths under _TMR2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _SW_ISR in BANK12

    None.

Critical Paths under _TMR1_ISR in BANK12

    None.

Critical Paths under _TMR2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _SW_ISR in BANK13

    None.

Critical Paths under _TMR1_ISR in BANK13

    None.

Critical Paths under _TMR2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _SW_ISR in BANK14

    None.

Critical Paths under _TMR1_ISR in BANK14

    None.

Critical Paths under _TMR2_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _SW_ISR in BANK15

    None.

Critical Paths under _TMR1_ISR in BANK15

    None.

Critical Paths under _TMR2_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _SW_ISR in BANK16

    None.

Critical Paths under _TMR1_ISR in BANK16

    None.

Critical Paths under _TMR2_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _SW_ISR in BANK17

    None.

Critical Paths under _TMR1_ISR in BANK17

    None.

Critical Paths under _TMR2_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _SW_ISR in BANK18

    None.

Critical Paths under _TMR1_ISR in BANK18

    None.

Critical Paths under _TMR2_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _SW_ISR in BANK19

    None.

Critical Paths under _TMR1_ISR in BANK19

    None.

Critical Paths under _TMR2_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _SW_ISR in BANK20

    None.

Critical Paths under _TMR1_ISR in BANK20

    None.

Critical Paths under _TMR2_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _SW_ISR in BANK21

    None.

Critical Paths under _TMR1_ISR in BANK21

    None.

Critical Paths under _TMR2_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _SW_ISR in BANK22

    None.

Critical Paths under _TMR1_ISR in BANK22

    None.

Critical Paths under _TMR2_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _SW_ISR in BANK23

    None.

Critical Paths under _TMR1_ISR in BANK23

    None.

Critical Paths under _TMR2_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _SW_ISR in BANK24

    None.

Critical Paths under _TMR1_ISR in BANK24

    None.

Critical Paths under _TMR2_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _SW_ISR in BANK25

    None.

Critical Paths under _TMR1_ISR in BANK25

    None.

Critical Paths under _TMR2_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _SW_ISR in BANK26

    None.

Critical Paths under _TMR1_ISR in BANK26

    None.

Critical Paths under _TMR2_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _SW_ISR in BANK27

    None.

Critical Paths under _TMR1_ISR in BANK27

    None.

Critical Paths under _TMR2_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _SW_ISR in BANK28

    None.

Critical Paths under _TMR1_ISR in BANK28

    None.

Critical Paths under _TMR2_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _SW_ISR in BANK29

    None.

Critical Paths under _TMR1_ISR in BANK29

    None.

Critical Paths under _TMR2_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _SW_ISR in BANK30

    None.

Critical Paths under _TMR1_ISR in BANK30

    None.

Critical Paths under _TMR2_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _SW_ISR in BANK31

    None.

Critical Paths under _TMR1_ISR in BANK31

    None.

Critical Paths under _TMR2_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _SW_ISR in BANK32

    None.

Critical Paths under _TMR1_ISR in BANK32

    None.

Critical Paths under _TMR2_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _SW_ISR in BANK33

    None.

Critical Paths under _TMR1_ISR in BANK33

    None.

Critical Paths under _TMR2_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _SW_ISR in BANK34

    None.

Critical Paths under _TMR1_ISR in BANK34

    None.

Critical Paths under _TMR2_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _SW_ISR in BANK35

    None.

Critical Paths under _TMR1_ISR in BANK35

    None.

Critical Paths under _TMR2_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Critical Paths under _SW_ISR in BANK36

    None.

Critical Paths under _TMR1_ISR in BANK36

    None.

Critical Paths under _TMR2_ISR in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _DEFAULT_ISR in BANK37

    None.

Critical Paths under _SW_ISR in BANK37

    None.

Critical Paths under _TMR1_ISR in BANK37

    None.

Critical Paths under _TMR2_ISR in BANK37

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6297
                         _ClockSetup
                          _GpioSetup
                     _InterruptSetup
                            _SD_Init
                       _SD_ReadBlock
                           _SPI_Init
                       _SysTickSetup
                        _SystemSleep
                  _UserAppInitialize
                         _UserAppRun
 ---------------------------------------------------------------------------------
 (1) _UserAppRun                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UserAppInitialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SystemSleep                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SysTickSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SD_ReadBlock                                         9     6      3    3120
                                              9 COMRAM     9     6      3
               _SD_Check8bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (1) _SD_Init                                              0     0      0    3177
              _SD_Check40bitResponse
               _SD_Check8bitResponse
               _SD_Read40bitResponse
                _SD_Read8bitResponse
                     _SD_SendCommand
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _SD_SendCommand                                       7     3      4    2574
                                              2 COMRAM     7     3      4
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      23
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SD_Read8bitResponse                                  1     1      0      46
                                              1 COMRAM     1     1      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _SD_Read40bitResponse                                 1     1      0      46
                                              1 COMRAM     1     1      0
                           _SPI_Read
 ---------------------------------------------------------------------------------
 (2) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SD_Check8bitResponse                                 2     2      0      46
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SD_Check40bitResponse                                6     2      4     442
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _InterruptSetup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GpioSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClockSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _DEFAULT_ISR                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _SW_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClockSetup
   _GpioSetup
   _InterruptSetup
   _SD_Init
     _SD_Check40bitResponse
     _SD_Check8bitResponse
     _SD_Read40bitResponse
       _SPI_Read
     _SD_Read8bitResponse
       _SPI_Read
     _SD_SendCommand
       _SPI_Write
     _SPI_Write
   _SD_ReadBlock
     _SD_Check8bitResponse
     _SD_Read8bitResponse
       _SPI_Read
     _SD_SendCommand
       _SPI_Write
     _SPI_Read
   _SPI_Init
   _SysTickSetup
   _SystemSleep
   _UserAppInitialize
   _UserAppRun

 _DEFAULT_ISR (ROOT)

 _SW_ISR (ROOT)

 _TMR1_ISR (ROOT)

 _TMR2_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            20FF      0     600      71       18.2%
EEDATA             400      0       0       0        0.0%
BITBANK37          100      0       0      70        0.0%
BANK37             100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0     100       7      100.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      2A       1       44.2%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A      69        0.0%
DATA                 0      0     72A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Apr 10 10:21:47 2021

                 ??_InterruptSetup 0514              __size_of_SysTickSetup 0034  
                      _G_u8SDResp8 052A                                 l43 06D6  
                               l52 06A0                                 l46 05AA  
                               l55 06AE                                 l49 0576  
                              l310 0666                                l144 064A  
                              l313 05DC                                l322 0682  
                              l250 060E                                l242 0118  
                              l147 06D4                                l316 05EE  
                              l245 0302                                l254 062E  
                              l319 0670                                l176 06C8  
                              l249 0606                                l266 04C0  
                              l258 0522                                l267 04C2  
                              l259 0542                                l278 03CE  
                              u300 0522                                u301 051E  
                              u310 0464                                u311 0460  
                              u320 047A                                u400 0118  
                              u321 0476                                u401 0114  
                              u330 0490                                u410 0336  
                              u331 048C                                u411 0332  
                              u340 04A6                                u260 05EC  
                              u420 0350                                u341 04A2  
                              u261 05E8                                u421 034C  
                              u350 04BC                                u270 0680  
                              u430 0362                                u351 04B8  
                              u271 067C                                u431 035E  
                              u280 0606                                u440 0376  
                              u360 06AE                                u281 0602  
                              u441 0372                                u361 06AA  
                              u290 0628                                u370 0072  
                              u450 03C2                                u291 0624  
                              u371 006E                                u451 03BE  
                              u380 00B4                                u381 00B0  
                              u390 00E6                                u391 00E2  
                              wreg 0004E8               __size_of_DEFAULT_ISR 001A  
           ??_SD_Check8bitResponse 0514                    ?_SD_SendCommand 0515  
                             l1400 02CC                               l1410 02F6  
                             l1402 02D0                               l1420 060A  
                             l1412 02FC                               l1404 02D6  
                             l1500 0088                               l1430 062C  
                             l1350 0668                               l1414 05F0  
                             l1342 05D2                               l1406 02DC  
                             l1510 00E6                               l1502 008E  
                             l1424 0612                               l1352 0680  
                             l1440 0526                               l1416 05F0  
                             l1344 05D8                               l1408 02E2  
                             l1360 0220                               l1512 00FC  
                             l1504 00B4                               l1520 063A  
                             l1450 0468                               l1426 0616  
                             l1434 050C                               l1418 05F6  
                             l1346 05DA                               l1370 024E  
                             l1362 0228                               l1514 0102  
                             l1506 00CA                               l1530 0306  
                             l1522 063E                               l1460 04A6  
                             l1452 047A                               l1444 044E  
                             l1428 0628                               l1436 050C  
                             l1348 05EC                               l1380 0278  
                             l1372 0252                               l1364 022E  
                             l1356 021C                               l1508 00D0  
                             l1540 0340                               l1532 031C  
                             l1524 0642                               l1516 0630  
                             l1462 04AA                               l1454 047E  
                             l1446 0452                               l1438 0512  
                             l1390 02A2                               l1382 027C  
                             l1374 0258                               l1366 0234  
                             l1358 021C                               l1550 037E  
                             l1542 0350                               l1534 0320  
                             l1470 0544                               l1526 0646  
                             l1518 0634                               l1464 04BC  
                             l1456 0490                               l1448 0464  
                             l1392 02A6                               l1384 0282  
                             l1376 025E                               l1368 023A  
                             l1560 039A                               l1552 0386  
                             l1528 0306                               l1480 064C  
                             l1472 056E                               l1458 0494  
                             l1394 02AC                               l1386 0288  
                             l1378 0264                               l1490 003E  
                             l1562 03AC                               l1554 038E  
                             l1546 0366                               l1538 033A  
                             l1482 0650                               l1474 0574  
                             l1570 04C4                               l1468 0578  
                             l1396 02B2                               l1388 028E  
                             l1492 0040                               l1564 03B0  
                             l1556 0392                               l1548 0376  
                             l1484 0664                               l1476 069E  
                             l1580 04D6                               l1572 04C6  
                             l1478 06C2                               l1398 02B8  
                             l1494 0056                               l1486 0000  
                             l1566 03C2                               l1590 04F6  
                             l1582 04DA                               l1574 04CA  
                             l1496 005C                               l1488 0002  
                             l1592 04F8                               l1584 04DE  
                             l1576 04CE                               l1498 0072  
                             l1594 04FC                               l1586 04E2  
                             l1578 04D2                               l1596 04FE  
                             l1588 04F4                               l1598 0502  
                             _LATA 0004BE                               _LATC 0004C0  
                             _T2PR 000323                               _main 04C4  
                     _SysTickSetup 0544                    __end_of_SD_Init 011A  
                             fsr1h 0004E2                               indf2 0004DF  
                             fsr1l 0004E1                               fsr2l 0004D9  
          SD_ReadBlock@pu8RxBuffer 0520                               start 0102  
    __size_of_SD_Read40bitResponse 0038               __size_of_SystemSleep 0012  
                     ___param_bank 000000       __size_of_SD_Read8bitResponse 0020  
                 __end_of_CRCTable FFFF                         _ClockSetup 06D6  
                            ?_main 0513                              _T1CLK 000321  
                            _T1CON 00031E                              _T2CON 000324  
                            i2l201 06C0                              i1l188 0696  
                            i2l181 06D2                              i2l196 05CE  
                            _TMR0H 000319                              _TMR1H 00031D  
                            _TMR0L 000318                              _TMR1L 00031C  
                            _TRISA 0004C6                              _TRISC 0004C8  
                 __end_of_TMR1_ISR 05D0                   __end_of_TMR2_ISR 06C2  
                    _G_au8SDResp40 0525                      SD_ReadBlock@i 0523  
                 __end_of_SPI_Init 0668                   __end_of_SPI_Read 0684  
                            tablat 0004F5                              status 0004D8  
               __size_of_SPI_Write 0020                    __initialization 03D0  
                     __end_of_main 050C                             ??_main 0525  
                    __activetblptr 000002  SD_Read40bitResponse@u8ReadMessage 0514  
                        ??_SD_Init 051C                             _ANSELA 000400  
                           _ANSELC 000410                             _T0CON0 00031A  
                           _T0CON1 00031B                             _T1GCON 00031F  
                           _RC2PPS 000213                             _RC4PPS 000215  
                           i1l1304 068A                             i2l1302 06D0  
                           i2l1306 05AC                             i2l1308 05C8  
                           i2l1600 06B0                             i2l1602 06B2  
                           i2l1604 06B4                 __size_of_GpioSetup 0034  
                           _SW_ISR 06D0                        ?_ClockSetup 0513  
                           clear_0 041C                             clear_1 042E  
         SD_SendCommand@u8CMD6bit_ 0519                 _G_au8SDReadBuffer0 0B00  
               _G_au8SDReadBuffer1 0900                  __end_of_SPI_Write 05F0  
                     __pdataCOMRAM 0525                       __mediumconst FEFE  
                           tblptrh 0004F7                             tblptrl 0004F6  
      SD_Check8bitResponse@u8Byte_ 0514                             tblptru 0004F8  
                       _UserAppRun 06D4                         __accesstop 0560  
          __end_of__initialization 0442                      ___rparam_used 000001  
   __size_of_SD_Check40bitResponse 0078      __end_of_SD_Check40bitResponse 04C4  
                 _G_u8UserAppFlags 0511                     __pcstackCOMRAM 0513  
                     __pidataBANK6 011A                          ?_TMR1_ISR 0513  
                        ?_TMR2_ISR 0513                     ivt0x8_undefint 0100  
         SD_SendCommand@u8Checksum 051B               _G_au8UserAppsinTable 0600  
                __end_of_GpioSetup 05AC                          ?_SPI_Init 0513  
                        ?_SPI_Read 0513                   ??_SD_SendCommand 0519  
              _SD_Read8bitResponse 05F0                __size_of_ClockSetup 0002  
                          ?_SW_ISR 0513                            IVTBASEH 00045E  
                          IVTBASEL 00045D                            IVTBASEU 00045F  
             ?_SD_Read8bitResponse 0513                         ??_TMR1_ISR 0513  
                       ??_TMR2_ISR 0513                            _DAC1CON 00007F  
                       ??_SPI_Init 0514                         ??_SPI_Read 0514  
     __end_of_SD_Read40bitResponse 0544                      ??_DEFAULT_ISR 0513  
                          _SPI1CLK 00008C                            i2u23_40 05C8  
                          i2u23_41 05C4                            _SPI1RXB 000080  
                          _SPI1TXB 000081                        ?_UserAppRun 0513  
                          _SD_Init 0000      __size_of_SD_Check8bitResponse 0020  
       SD_SendCommand@u8ByteToSend 051A                      ??_SystemSleep 0514  
                  __size_of_SW_ISR 0004                            __Hparam 0000  
                          __Lparam 0000              ??_SD_Read8bitResponse 0514  
                          __pcinit 03D0                            __ramtop 2600  
                          __ptext0 04C4                            __ptext1 06D4  
                          __ptext2 0630                            __ptext3 069E  
                          __ptext4 0544                            __ptext5 064C  
                          __ptext6 0304                            __ptext7 0000  
                          __ptext8 021A                            __ptext9 05D0  
                        _T1CONbits 00031E            __size_of_InterruptSetup 0008  
              __end_of_DEFAULT_ISR 069E               end_of_initialization 0442  
                    __Lmediumconst FEFE                            postdec1 0004E5  
                          postinc0 0004EE                __end_of_SystemSleep 06B0  
                     ??_ClockSetup 0514                __size_of_UserAppRun 0002  
                    ?_SD_ReadBlock 051C        SD_Check40bitResponse@bMatch 0519  
               _G_au8SDWriteBuffer 0700                          _SPI_Write 05D0  
               __end_of_ClockSetup 06D8               _SD_Read40bitResponse 050C  
                   __end_of_SW_ISR 06D4                      __pidataCOMRAM 06CA  
                __size_of_TMR1_ISR 0024                  __size_of_TMR2_ISR 0012  
                   ??_SD_ReadBlock 051F                  __size_of_SPI_Init 001C  
                __size_of_SPI_Read 001C                        _DEFAULT_ISR 0684  
                        _GpioSetup 0578                start_initialization 03D0  
             SPI_Write@u8DataByte_ 0514                         ?_SPI_Write 0513  
                       ivt0x8_base 0008                      ?_SysTickSetup 0513  
                         ??_SW_ISR 0513              ?_SD_Read40bitResponse 0513  
                      _SystemSleep 069E     DEFAULT_ISR@u32UnhandledCounter 0501  
            _SD_Check40bitResponse 044C                        __pdataBANK6 0600  
                  TMR1_ISR@u8Index 050E                     _InterruptSetup 06C2  
                      __pbssBIGRAM 0700                         ?_GpioSetup 0513  
                      __pbssCOMRAM 0501          SD_ReadBlock@u8ReadMessage 0522  
                _UserAppInitialize 0630                       ??_UserAppRun 0514  
                         ?_SD_Init 0513                 ?_UserAppInitialize 0513  
                   ??_SysTickSetup 0514                ??_UserAppInitialize 0514  
                    __pmediumconst FEFE       __end_of_SD_Check8bitResponse 0630  
               __end_of_UserAppRun 06D6                           _DAC1DATL 00007D  
           __end_of_InterruptSetup 06CA              _G_u8SDCurrentRxBuffer 050D  
        __end_of_UserAppInitialize 064C                        ??_SPI_Write 0514  
                         _T2CLKCON 000326               SD_ReadBlock@u8Addr0_ 051E  
             SD_ReadBlock@u8Addr1_ 051D               SD_ReadBlock@u8Addr2_ 051C  
             SD_ReadBlock@u8Addr3_ 051F                           _CRCTable FEFF  
          __size_of_SD_SendCommand 00EA             ??_SD_Read40bitResponse 0514  
      __end_of_SD_Read8bitResponse 0610                           _LATCbits 0004C0  
             __end_of_SD_ReadBlock 03D0                           _PIE3bits 0004A1  
                     _SPI1CON0bits 000084                       _SPI1CON2bits 000086  
                         _PIR0bits 0004AE                           _SPI1BAUD 000089  
                         _PIR3bits 0004B1                           _SPI1CON0 000084  
                         _SPI1CON1 000085                           _SPI1CON2 000086  
           ?_SD_Check40bitResponse 0514                           _TMR1_ISR 05AC  
                         _TMR2_ISR 06B0                    _G_u8SystemFlags 0512  
                         _SPI_Init 064C                           _SPI_Read 0668  
                  ?_InterruptSetup 0513                        ??_GpioSetup 0514  
          _G_u8UserAppTimePeriodHi 0510            _G_u8UserAppTimePeriodLo 050F  
                      _INTCON0bits 0004D6                          copy_data0 03E4  
                        copy_data1 0408                   __size_of_SD_Init 011A  
                         __Hrparam 0000                           __Lrparam 0000  
 SD_Read8bitResponse@u8ReadMessage 0514               __end_of_SysTickSetup 0578  
       SD_Check8bitResponse@bMatch 0515                       ?_DEFAULT_ISR 0513  
                       _T0CON0bits 00031A         __size_of_UserAppInitialize 001C  
                         __pivt0x8 0008                           __ptext10 05F0  
                         __ptext11 050C                           __ptext20 05AC  
                         __ptext12 0668                           __ptext21 06B0  
                         __ptext13 0610                           __ptext14 044C  
                         __ptext15 06C2                           __ptext16 0578  
                         __ptext17 06D6                           __ptext18 0684  
                         __ptext19 06D0               _SD_Check8bitResponse 0610  
                    __size_of_main 0048                       ?_SystemSleep 0513  
               _G_u32SystemTime1ms 0509              SD_SendCommand@u8Arg0_ 0518  
            SD_SendCommand@u8Arg1_ 0517              SD_SendCommand@u8Arg2_ 0516  
            SD_SendCommand@u8Arg3_ 0515              ?_SD_Check8bitResponse 0513  
            __size_of_SD_ReadBlock 00CC                           intlevel1 0000  
                         intlevel2 0000                     _SD_SendCommand 021A  
                       _SPI1SCKPPS 00026A                         _SPI1SDIPPS 00026B  
                _G_u32SystemTime1s 0505                       _SD_ReadBlock 0304  
           __end_of_SD_SendCommand 0304            ??_SD_Check40bitResponse 0518  
    SD_Check40bitResponse@u8Byte0_ 0517      SD_Check40bitResponse@u8Byte1_ 0516  
    SD_Check40bitResponse@u8Byte2_ 0515      SD_Check40bitResponse@u8Byte3_ 0514  
    SD_Check40bitResponse@u8Byte4_ 0518  
